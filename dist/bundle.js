/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_js_placementShipsPlayer_PlacementShipsPlayer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/js/placementShipsPlayer/PlacementShipsPlayer */ \"./src/js/placementShipsPlayer/PlacementShipsPlayer.js\");\n/* harmony import */ var _src_js_placementShipsComputer_PlacementShipsComputer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/js/placementShipsComputer/PlacementShipsComputer */ \"./src/js/placementShipsComputer/PlacementShipsComputer.js\");\n/* harmony import */ var _src_js_mechanicsFight_MechanicsFight__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/js/mechanicsFight/MechanicsFight */ \"./src/js/mechanicsFight/MechanicsFight.js\");\n/* harmony import */ var _src_js_store_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/js/store/store */ \"./src/js/store/store.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst buttonStartGame = document.querySelector('.start_game'),\r\n      userNameDisplayWindow = document.querySelector('.user_name');\r\n\r\nlet {userName, literals} = _src_js_store_store__WEBPACK_IMPORTED_MODULE_3__.default.getGameState()\r\n\r\nconst getResponseFromUser = () => {\r\n   userName = prompt(literals.NAME_QUERY,'');\r\n\r\n   if (userName === null || userName === '') {\r\n      userNameDisplayWindow.innerHTML = `Имя: ${literals.DEFAULT_USER_NAME}`;\r\n   } else {\r\n      userNameDisplayWindow.innerHTML = `Имя: ${userName}.`;\r\n   }\r\n};\r\n\r\n_src_js_placementShipsPlayer_PlacementShipsPlayer__WEBPACK_IMPORTED_MODULE_0__.PlacementShipsUser.init();\r\n\r\nbuttonStartGame.addEventListener('click', () => {  \r\n   getResponseFromUser();\r\n   _src_js_placementShipsComputer_PlacementShipsComputer__WEBPACK_IMPORTED_MODULE_1__.PlacementShipsComputer.init();\r\n   _src_js_mechanicsFight_MechanicsFight__WEBPACK_IMPORTED_MODULE_2__.MechanicsFight.init();\r\n});\n\n//# sourceURL=webpack://sea_battle/./index.js?");

/***/ }),

/***/ "./src/js/mechanicsFight/MechanicsFight.js":
/*!*************************************************!*\
  !*** ./src/js/mechanicsFight/MechanicsFight.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MechanicsFight\": () => (/* binding */ MechanicsFight)\n/* harmony export */ });\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/store */ \"./src/js/store/store.js\");\n/* harmony import */ var _drawMissesAroundComputerKilledShips__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./drawMissesAroundComputerKilledShips */ \"./src/js/mechanicsFight/drawMissesAroundComputerKilledShips.js\");\n/* harmony import */ var _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drawMissesAroundKilledShipsPlayer */ \"./src/js/mechanicsFight/drawMissesAroundKilledShipsPlayer.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst MechanicsFight = {\r\n   init: () => {\r\n      _store_store__WEBPACK_IMPORTED_MODULE_0__.closeWinnerWindow.addEventListener('click', () => {\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.winnerWindow.style.display = 'none';\r\n      });\r\n\r\n      _store_store__WEBPACK_IMPORTED_MODULE_0__.closeLoserWindow.addEventListener('click', () => {\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.loserWindow.style.display = 'none';\r\n      });\r\n\r\n      const { arrayPlayerCells, arrayComputerCells, mechanicsFight, literals } = _store_store__WEBPACK_IMPORTED_MODULE_0__.default.getGameState();\r\n      \r\n      // defineWinner - функция вывода окна победителя.\r\n      function defineWinner() {\r\n         if (\r\n            mechanicsFight.computerShips.oneDeck.length === 0 &&\r\n            mechanicsFight.computerShips.twoDeck.length === 0 &&\r\n            mechanicsFight.computerShips.threeDeck.length === 0\r\n         ) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.winnerWindow.style.display = 'grid';\r\n\r\n            arrayComputerCells.forEach((ship) => {\r\n               ship.removeEventListener('click', activateShotUser);\r\n            });\r\n\r\n            return;\r\n\r\n         } else if (\r\n            mechanicsFight.playerShips.oneDeck.length === 0 &&\r\n            mechanicsFight.playerShips.twoDeck.length === 0 &&\r\n            mechanicsFight.playerShips.threeDeck.length === 0\r\n         ) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.loserWindow.style.display = 'grid';\r\n\r\n            return;\r\n         }\r\n      }\r\n\r\n      // drawNumberShipsUserAndShipComputer - функция подсчета оставшихся кораблей на полях игрока и компьютера.\r\n      function drawNumberShipsUserAndShipComputer() {\r\n         if (mechanicsFight.playerShips.oneDeck.length === 0) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsPlayer.innerHTML = '0';\r\n         } else if (mechanicsFight.playerShips.oneDeck.length === 1) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsPlayer.innerHTML = '1';\r\n         } else if (mechanicsFight.playerShips.oneDeck.length === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsPlayer.innerHTML = '2';\r\n         }\r\n\r\n         if (mechanicsFight.playerShips.twoDeck.length === 0) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countDoubleDeckShipsPlayer.innerHTML = '0';\r\n         } else if (mechanicsFight.playerShips.twoDeck.length === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countDoubleDeckShipsPlayer.innerHTML = '1';\r\n         }\r\n\r\n         if (mechanicsFight.playerShips.threeDeck.length === 0) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countThreeDeckShipsPlayer.innerHTML = '0';\r\n         }\r\n\r\n\r\n         if (mechanicsFight.computerShips.oneDeck.length === 0) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsComputer.innerHTML = '0';\r\n         } else if (mechanicsFight.computerShips.oneDeck.length === 1) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsComputer.innerHTML = '1';\r\n         } else if (mechanicsFight.computerShips.oneDeck.length === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsComputer.innerHTML = '2';\r\n         }\r\n\r\n         if (mechanicsFight.computerShips.twoDeck.length === 0) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countDoubleDeckShipsComputer.innerHTML = '0';\r\n         } else if (mechanicsFight.computerShips.twoDeck.length === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countDoubleDeckShipsComputer.innerHTML = '1';\r\n         }\r\n\r\n         if (mechanicsFight.computerShips.threeDeck.length === 0) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countThreeDeckShipsComputer.innerHTML = '0';\r\n         }\r\n      }\r\n\r\n      arrayPlayerCells.forEach(ship => {\r\n         if (ship.classList.contains('activeOneDeckShip')) {\r\n            mechanicsFight.playerShips.oneDeck.push(ship);\r\n         } else if (ship.classList.contains('activeTwoDeckShip')) {\r\n            mechanicsFight.playerShips.twoDeck.push(ship);\r\n         } else if (ship.classList.contains('activeThreeDeckShip')) {\r\n            mechanicsFight.playerShips.threeDeck.push(ship);\r\n         }\r\n      });\r\n\r\n      arrayComputerCells.forEach((ship) => {\r\n         if (ship.classList.contains('activeOneDeckComputerShip')) {\r\n            mechanicsFight.computerShips.oneDeck.push(ship);\r\n         } else if (ship.classList.contains('activeTwoDeckComputerShip')) {\r\n            mechanicsFight.computerShips.twoDeck.push(ship);\r\n         } else if (ship.classList.contains('activeThreeDeckComputerShip')) {\r\n            mechanicsFight.computerShips.threeDeck.push(ship);\r\n         }\r\n      });\r\n\r\n      function getRandomShip() {\r\n         mechanicsFight.randomPlayerCell = arrayPlayerCells[Math.floor(Math.random() * arrayPlayerCells.length)];\r\n      }\r\n\r\n      // getLimitedRandomShip - функция ограниченого выстрела компьютера при попадании в 2-х или 3-х палубный корабль. \r\n      function getLimitedRandomShip() {\r\n         mechanicsFight.limitedRandomCell = mechanicsFight.limitedArrayPlayerCells[Math.floor(Math.random() * mechanicsFight.limitedArrayPlayerCells.length)];\r\n      }\r\n\r\n      // activateShotUser - функция для выстрела игрока.\r\n      function activateShotUser() {\r\n         if (this.classList.contains('activeOneDeckComputerShip')) {\r\n            this.style.backgroundColor = 'red';\r\n            this.classList.add('hit');\r\n            mechanicsFight.computerShips.oneDeck.splice(this, 1);\r\n            (0,_drawMissesAroundComputerKilledShips__WEBPACK_IMPORTED_MODULE_1__.drawMissesAroundKilledSingleDeckComputerShips)();\r\n\r\n         } else if (this.classList.contains('activeTwoDeckComputerShip')) {\r\n            this.style.backgroundColor = 'red';\r\n            this.classList.add('hit');\r\n            mechanicsFight.computerShips.twoDeck.splice(this, 1);\r\n            (0,_drawMissesAroundComputerKilledShips__WEBPACK_IMPORTED_MODULE_1__.drawMissesAroundKilledDoubleDeckComputerShips)();\r\n\r\n         } else if (this.classList.contains('activeThreeDeckComputerShip')) {\r\n            this.style.backgroundColor = 'red';\r\n            this.classList.add('hit');\r\n            mechanicsFight.computerShips.threeDeck.splice(this, 1);\r\n            (0,_drawMissesAroundComputerKilledShips__WEBPACK_IMPORTED_MODULE_1__.drawMissesAroundKilledThreeDeckComputerShip)();\r\n\r\n         } else if (this.classList.contains('miss')) {\r\n            return getShotUser();\r\n         } else {\r\n            this.innerHTML = `<div class='missed'></div>`;\r\n            this.classList.add('miss');\r\n         }\r\n\r\n         defineWinner();\r\n         drawNumberShipsUserAndShipComputer();\r\n         getShotUser(event);\r\n      }\r\n\r\n      // makeShotComputer - функция хода компьютера.\r\n      function makeShotComputer() {\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.playerField.style.outline = '4px solid red';\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.computerMove.innerHTML = literals.MOVE_COMPUTER;\r\n\r\n         const delayShot = setTimeout(() => {\r\n            function getLimitedShot() {\r\n               getLimitedRandomShip();\r\n\r\n               const coordinates = mechanicsFight.limitedRandomCell.id.split('-'),\r\n                  y = Number(coordinates[1]),\r\n                  rawX = Number(coordinates[2]),\r\n                  x = rawX - 1;\r\n\r\n               if (_drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] === null) {\r\n                  if (mechanicsFight.limitedRandomCell.classList.contains('activeTwoDeckShip')) {\r\n                     mechanicsFight.limitedRandomCell.style.backgroundColor = 'red';\r\n\r\n                     mechanicsFight.limitedRandomCell.classList.add('hit');\r\n\r\n                     mechanicsFight.playerShips.twoDeck.splice(mechanicsFight.limitedRandomCell, 1);\r\n\r\n                     _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] = 'hit';\r\n\r\n                     mechanicsFight.limitedArrayPlayerCells.splice(mechanicsFight.limitedRandomCell, 1);\r\n\r\n                     clearTimeout(delayShot);\r\n\r\n                     if (mechanicsFight.playerShips.twoDeck.length === 2 || mechanicsFight.playerShips.twoDeck.length === 0) {\r\n                        mechanicsFight.limitedArrayPlayerCells.splice(0, mechanicsFight.limitedArrayPlayerCells.length);\r\n                     }\r\n\r\n                     defineWinner();\r\n                     drawNumberShipsUserAndShipComputer();\r\n                     (0,_drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.drawMissesAroundKilledDoubleDeckPlayerShips)();\r\n                     makeShotComputer();\r\n\r\n                  } else if (mechanicsFight.limitedRandomCell.classList.contains('activeThreeDeckShip')) {\r\n                     mechanicsFight.limitedRandomCell.style.backgroundColor = 'red';\r\n\r\n                     mechanicsFight.limitedRandomCell.classList.add('hit');\r\n\r\n                     mechanicsFight.playerShips.threeDeck.splice(mechanicsFight.limitedRandomCell, 1);\r\n\r\n                     _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] = 'hit';\r\n\r\n                     clearTimeout(delayShot);\r\n\r\n                     if (mechanicsFight.playerShips.threeDeck.length === 1) {\r\n                        mechanicsFight.limitedArrayPlayerCells.splice(0, mechanicsFight.limitedArrayPlayerCells.length);\r\n\r\n                        arrayPlayerCells.forEach(element => {\r\n                           if (element.classList.contains('activeThreeDeckShip')) {\r\n                              mechanicsFight.limitedArrayPlayerCells.push(element);\r\n                           }\r\n                        })\r\n\r\n                        getLimitedShot();\r\n\r\n                     } else if (mechanicsFight.playerShips.threeDeck.length === 0) {\r\n                        mechanicsFight.limitedArrayPlayerCells.splice(0, mechanicsFight.limitedArrayPlayerCells.length);\r\n\r\n                        defineWinner();\r\n                        drawNumberShipsUserAndShipComputer();\r\n                        (0,_drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.drawMissesAroundKilledThreeDeckPlayerShip)();\r\n                        makeShotComputer();\r\n\r\n                     } else {\r\n                        defineWinner();\r\n                        drawNumberShipsUserAndShipComputer();\r\n                        (0,_drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.drawMissesAroundKilledThreeDeckPlayerShip)();\r\n                        getLimitedShot();\r\n                     }\r\n\r\n\r\n                  } else {\r\n                     mechanicsFight.limitedRandomCell.innerHTML = `<div class='missed'></div>`;\r\n\r\n                     _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] = 'missed';\r\n\r\n\r\n                     arrayComputerCells.forEach((ship) => {\r\n                        ship.addEventListener('click', activateShotUser);\r\n                     });\r\n\r\n                     clearTimeout(delayShot);\r\n                     _store_store__WEBPACK_IMPORTED_MODULE_0__.playerField.style.outline = 'none';\r\n                     _store_store__WEBPACK_IMPORTED_MODULE_0__.computerMove.innerHTML = '';\r\n                     getShotUser();\r\n                  }\r\n\r\n               } else {\r\n                  makeShotComputer();\r\n               }\r\n\r\n            }\r\n\r\n            function getShot() {\r\n               getRandomShip();\r\n\r\n               const coordinates = mechanicsFight.randomPlayerCell.id.split('-'),\r\n                  y = Number(coordinates[1]),\r\n                  rawX = Number(coordinates[2]),\r\n                  x = rawX - 1;\r\n\r\n\r\n               if (_drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] === null) {\r\n                  if (mechanicsFight.randomPlayerCell.classList.contains('activeOneDeckShip')) {\r\n                     mechanicsFight.playerShips.oneDeck.splice(mechanicsFight.randomPlayerCell, 1);\r\n\r\n                     mechanicsFight.randomPlayerCell.style.backgroundColor = 'red';\r\n\r\n                     mechanicsFight.randomPlayerCell.classList.add('hit');\r\n\r\n                     _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] = 'hit';\r\n\r\n                     clearTimeout(delayShot);\r\n                     defineWinner();\r\n                     drawNumberShipsUserAndShipComputer();\r\n                     (0,_drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.drawMissesAroundKilledSingleDeckPlayerShips)();\r\n                     getShot();\r\n\r\n                  } else if (mechanicsFight.randomPlayerCell.classList.contains('activeTwoDeckShip')) {\r\n                     mechanicsFight.playerShips.twoDeck.splice(mechanicsFight.randomPlayerCell, 1);\r\n\r\n                     mechanicsFight.randomPlayerCell.classList.add('hit');\r\n\r\n                     mechanicsFight.randomPlayerCell.style.backgroundColor = 'red';\r\n\r\n                     _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] = 'hit';\r\n\r\n                     clearTimeout(delayShot);\r\n                     defineWinner();\r\n                     drawNumberShipsUserAndShipComputer();\r\n\r\n                     if (y === 1 && x === 0) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 1 && x === 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 6 && x === 0) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 6 && x === 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y > 1 && y < 6 && x === 0) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 1 && x > 0 && x < 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y > 1 && y < 6 && x === 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 6 && x > 0 && x < 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y > 1 && y < 6 && x > 0 && x < 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n                     }\r\n\r\n\r\n                  } else if (mechanicsFight.randomPlayerCell.classList.contains('activeThreeDeckShip')) {\r\n                     mechanicsFight.playerShips.threeDeck.splice(mechanicsFight.randomPlayerCell, 1);\r\n\r\n                     mechanicsFight.randomPlayerCell.style.backgroundColor = 'red';\r\n\r\n                     mechanicsFight.randomPlayerCell.classList.add('hit');\r\n\r\n                     _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] = 'hit';\r\n\r\n                     clearTimeout(delayShot);\r\n                     defineWinner();\r\n                     drawNumberShipsUserAndShipComputer();\r\n\r\n                     if (y === 1 && x === 0) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 1 && x === 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 6 && x === 0) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 6 && x === 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y > 1 && y < 6 && x === 0) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 1 && x > 0 && x < 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y > 1 && y < 6 && x === 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y === 6 && x > 0 && x < 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1]\r\n                        );\r\n                        makeShotComputer();\r\n\r\n                     } else if (y > 1 && y < 6 && x > 0 && x < 5) {\r\n                        mechanicsFight.limitedArrayPlayerCells.push(\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x - 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y - 1][x],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y][x + 1],\r\n                           _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerMapDivs[y + 1][x]\r\n                        );\r\n                        makeShotComputer();\r\n                     }\r\n\r\n                  } else {\r\n                     mechanicsFight.randomPlayerCell.innerHTML = `<div class='missed'></div>`;\r\n\r\n                     _drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] = 'missed';\r\n\r\n                     arrayComputerCells.forEach((ship) => {\r\n                        ship.addEventListener('click', activateShotUser);\r\n                     });\r\n\r\n                     clearTimeout(delayShot);\r\n                     _store_store__WEBPACK_IMPORTED_MODULE_0__.playerField.style.outline = 'none';\r\n                     _store_store__WEBPACK_IMPORTED_MODULE_0__.computerMove.innerHTML = '';\r\n                     getShotUser();\r\n                  }\r\n\r\n               } else if (_drawMissesAroundKilledShipsPlayer__WEBPACK_IMPORTED_MODULE_2__.playerCellsMap[y][x] !== null) {\r\n                  getShot();\r\n               }\r\n            }\r\n\r\n            if (mechanicsFight.playerShips.oneDeck.length <= 3) {\r\n               if (mechanicsFight.playerShips.twoDeck.length === 4 || mechanicsFight.playerShips.twoDeck.length === 2 || mechanicsFight.playerShips.twoDeck.length === 0) {\r\n                  if (mechanicsFight.playerShips.threeDeck.length === 3 || mechanicsFight.playerShips.threeDeck.length === 0) {\r\n                     getShot();\r\n\r\n                  } else {\r\n                     getLimitedShot();\r\n                  }\r\n\r\n               } else {\r\n                  getLimitedShot();\r\n               }\r\n\r\n            } else {\r\n               getLimitedShot();\r\n            }\r\n\r\n         }, 1000);\r\n      }\r\n\r\n      arrayComputerCells.forEach((ship) => {\r\n         ship.addEventListener('click', activateShotUser);\r\n         drawNumberShipsUserAndShipComputer();\r\n      });\r\n\r\n      // getShotUser - функция выстрела игрока.\r\n      function getShotUser(event) {\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.ComputerField.style.outline = '4px solid red';\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.playerMove.innerHTML = literals.MOVE_USER;\r\n\r\n         if (event && (\r\n            event.target.classList.contains('activeOneDeckComputerShip') ||\r\n            event.target.classList.contains('activeTwoDeckComputerShip') ||\r\n            event.target.classList.contains('activeThreeDeckComputerShip')\r\n         )\r\n         ) {\r\n            drawNumberShipsUserAndShipComputer();\r\n            defineWinner();\r\n            getShotUser();\r\n\r\n         } else if (event && (\r\n            !event.target.classList.contains('activeOneDeckComputerShip') ||\r\n            !event.target.classList.contains('activeTwoDeckComputerShip') ||\r\n            !event.target.classList.contains('activeThreeDeckComputerShip')\r\n         )\r\n         ) {\r\n            arrayComputerCells.forEach((ship) => {\r\n               ship.removeEventListener('click', activateShotUser);\r\n            });\r\n\r\n            drawNumberShipsUserAndShipComputer();\r\n\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.ComputerField.style.outline = 'none';\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.playerMove.innerHTML = '';\r\n\r\n            makeShotComputer();\r\n         }\r\n      }\r\n\r\n      getShotUser();\r\n   }\r\n};\n\n//# sourceURL=webpack://sea_battle/./src/js/mechanicsFight/MechanicsFight.js?");

/***/ }),

/***/ "./src/js/mechanicsFight/drawMissesAroundComputerKilledShips.js":
/*!**********************************************************************!*\
  !*** ./src/js/mechanicsFight/drawMissesAroundComputerKilledShips.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"drawMissesAroundKilledSingleDeckComputerShips\": () => (/* binding */ drawMissesAroundKilledSingleDeckComputerShips),\n/* harmony export */   \"drawMissesAroundKilledDoubleDeckComputerShips\": () => (/* binding */ drawMissesAroundKilledDoubleDeckComputerShips),\n/* harmony export */   \"drawMissesAroundKilledThreeDeckComputerShip\": () => (/* binding */ drawMissesAroundKilledThreeDeckComputerShip)\n/* harmony export */ });\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/store */ \"./src/js/store/store.js\");\n\r\n\r\nconst {arrayComputerCells, mechanicsFight} = _store_store__WEBPACK_IMPORTED_MODULE_0__.default.getGameState();\r\n\r\nconst computerCellsMap = _store_store__WEBPACK_IMPORTED_MODULE_0__.default.getCopyEmptyCellsMap();\r\n\r\nconst computerMapDivs = {\r\n   1: arrayComputerCells.slice(0, 6),\r\n   2: arrayComputerCells.slice(6, 12),\r\n   3: arrayComputerCells.slice(12, 18),\r\n   4: arrayComputerCells.slice(18, 24),\r\n   5: arrayComputerCells.slice(24, 30),\r\n   6: arrayComputerCells.slice(30, 36)\r\n};\r\n\r\n// removeShipHitClass - функция удаления класса у убитых кораблей компьютера, после рисования миссов вокруг корабля.\r\nfunction removeShipHitClass() {\r\n   arrayComputerCells.forEach(ship => {\r\n      if (ship.classList.contains('hit')) {\r\n         ship.classList.remove('hit');\r\n      }\r\n   });\r\n}\r\n\r\n// drawMissesAroundKilledSingleDeckComputerShips - функция для отрисовки промохов вокруг убитого однопалубного корабля компьютера.\r\nfunction drawMissesAroundKilledSingleDeckComputerShips() {\r\n   const killedShip = arrayComputerCells.find(element => element.classList.contains('hit')),\r\n      coordinates = killedShip.id.split('-'),\r\n      y = Number(coordinates[1]),\r\n      rawX = Number(coordinates[2]),\r\n      x = rawX - 1;\r\n\r\n   if (\r\n      mechanicsFight.computerShips.oneDeck.length === 2 ||\r\n      mechanicsFight.computerShips.oneDeck.length === 1 ||\r\n      mechanicsFight.computerShips.oneDeck.length === 0\r\n   ) {\r\n      if (y > 1 && y < 6 && x > 0 && x < 5) {\r\n         computerCellsMap[y - 1][x - 1] = 'missed';\r\n         computerCellsMap[y - 1][x] = 'missed';\r\n         computerCellsMap[y - 1][x + 1] = 'missed';\r\n         computerCellsMap[y][x + 1] = 'missed';\r\n         computerCellsMap[y + 1][x + 1] = 'missed';\r\n         computerCellsMap[y + 1][x] = 'missed';\r\n         computerCellsMap[y + 1][x - 1] = 'missed';\r\n         computerCellsMap[y][x - 1] = 'missed';\r\n\r\n         computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n         computerMapDivs[y - 1][x].classList.add('miss');\r\n         computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n         computerMapDivs[y][x + 1].classList.add('miss');\r\n         computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n         computerMapDivs[y + 1][x].classList.add('miss');\r\n         computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n         computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n         computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 1 && x === 0) {\r\n         computerCellsMap[y][x + 1] = 'missed';\r\n         computerCellsMap[y + 1][x + 1] = 'missed';\r\n         computerCellsMap[y + 1][x] = 'missed';\r\n\r\n         computerMapDivs[y][x + 1].classList.add('miss');\r\n         computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n         computerMapDivs[y + 1][x].classList.add('miss');\r\n\r\n         computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 1 && x > 0 && x < 5) {\r\n         computerCellsMap[y][x + 1] = 'missed';\r\n         computerCellsMap[y + 1][x + 1] = 'missed';\r\n         computerCellsMap[y + 1][x] = 'missed';\r\n         computerCellsMap[y + 1][x - 1] = 'missed';\r\n         computerCellsMap[y][x - 1] = 'missed';\r\n\r\n         computerMapDivs[y][x + 1].classList.add('miss');\r\n         computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n         computerMapDivs[y + 1][x].classList.add('miss');\r\n         computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n         computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n         computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 1 && x === 5) {\r\n         computerCellsMap[y + 1][x] = 'missed';\r\n         computerCellsMap[y + 1][x - 1] = 'missed';\r\n         computerCellsMap[y][x - 1] = 'missed';\r\n\r\n         computerMapDivs[y + 1][x].classList.add('miss');\r\n         computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n         computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n         computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y > 1 && y < 6 && x === 5) {\r\n         computerCellsMap[y + 1][x] = 'missed';\r\n         computerCellsMap[y + 1][x - 1] = 'missed';\r\n         computerCellsMap[y][x - 1] = 'missed';\r\n         computerCellsMap[y - 1][x - 1] = 'missed';\r\n         computerCellsMap[y - 1][x] = 'missed';\r\n\r\n         computerMapDivs[y + 1][x].classList.add('miss');\r\n         computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n         computerMapDivs[y][x - 1].classList.add('miss');\r\n         computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n         computerMapDivs[y - 1][x].classList.add('miss');\r\n\r\n         computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 6 && x === 5) {\r\n         computerCellsMap[y][x - 1] = 'missed';\r\n         computerCellsMap[y - 1][x - 1] = 'missed';\r\n         computerCellsMap[y - 1][x] = 'missed';\r\n\r\n         computerMapDivs[y][x - 1].classList.add('miss');\r\n         computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n         computerMapDivs[y - 1][x].classList.add('miss');\r\n\r\n         computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 6 && x > 0 && x < 5) {\r\n         computerCellsMap[y][x - 1] = 'missed';\r\n         computerCellsMap[y - 1][x - 1] = 'missed';\r\n         computerCellsMap[y - 1][x] = 'missed';\r\n         computerCellsMap[y - 1][x + 1] = 'missed';\r\n         computerCellsMap[y][x + 1] = 'missed';\r\n\r\n         computerMapDivs[y][x - 1].classList.add('miss');\r\n         computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n         computerMapDivs[y - 1][x].classList.add('miss');\r\n         computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n         computerMapDivs[y][x + 1].classList.add('miss');\r\n\r\n         computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 6 && x === 0) {\r\n         computerCellsMap[y - 1][x] = 'missed';\r\n         computerCellsMap[y - 1][x + 1] = 'missed';\r\n         computerCellsMap[y][x + 1] = 'missed';\r\n\r\n         computerMapDivs[y - 1][x].classList.add('miss');\r\n         computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n         computerMapDivs[y][x + 1].classList.add('miss');\r\n\r\n         computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y > 1 && y < 6 && x === 0) {\r\n         computerCellsMap[y - 1][x] = 'missed';\r\n         computerCellsMap[y - 1][x + 1] = 'missed';\r\n         computerCellsMap[y][x + 1] = 'missed';\r\n         computerCellsMap[y + 1][x + 1] = 'missed';\r\n         computerCellsMap[y + 1][x] = 'missed';\r\n\r\n         computerMapDivs[y - 1][x].classList.add('miss');\r\n         computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n         computerMapDivs[y][x + 1].classList.add('miss');\r\n         computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n         computerMapDivs[y + 1][x].classList.add('miss');\r\n\r\n         computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n      }\r\n   }\r\n}\r\n\r\n// drawMissesAroundKilledDoubleDeckComputerShips - функция для отрисовки промохов вокруг убитого двухпалубного корабля компьютера.\r\nfunction drawMissesAroundKilledDoubleDeckComputerShips() {\r\n   const killedShip = arrayComputerCells.find(element => element.classList.contains('hit')),\r\n      coordinates = killedShip.id.split('-'),\r\n      y = Number(coordinates[1]),\r\n      rawX = Number(coordinates[2]),\r\n      x = rawX - 1;\r\n\r\n\r\n\r\n   if (mechanicsFight.computerShips.twoDeck.length === 2 || mechanicsFight.computerShips.twoDeck.length === 0) {\r\n      if (!killedShip.classList.contains('vertical')) {\r\n         if (y > 1 && y < 6 && x > 0 && x < 4) {\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n            computerCellsMap[y][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 0) {\r\n            computerCellsMap[y][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n\r\n            computerMapDivs[y][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n\r\n            computerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x > 0 && x < 4) {\r\n            computerCellsMap[y][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 4) {\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 6 && x === 0) {\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n            computerCellsMap[y][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 6 && x === 4) {\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x === 4) {\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x > 0 && x < 4) {\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n            computerCellsMap[y][x + 2] = 'missed';\r\n\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y][x + 2].classList.add('miss');\r\n\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x === 0) {\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n            computerCellsMap[y][x + 2] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y][x + 2].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n         }\r\n\r\n      } else if (killedShip.classList.contains('vertical')) {\r\n         if (y > 1 && y < 5 && x > 0 && x < 5) {\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x] = 'missed';\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x].classList.add('miss');\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 0) {\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x] = 'missed';\r\n\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x].classList.add('miss');\r\n\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x > 0 && x < 5) {\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x] = 'missed';\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x].classList.add('miss');\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 5) {\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 2][x] = 'missed';\r\n\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x].classList.add('miss');\r\n\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 5 && x === 5) {\r\n            computerCellsMap[y + 2][x] = 'missed';\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n\r\n            computerMapDivs[y + 2][x].classList.add('miss');\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n\r\n            computerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 5 && x === 5) {\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 5 && x > 0 && x < 5) {\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 5 && x === 0) {\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 5 && x === 0) {\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\n// drawMissesAroundKilledThreeDeckComputerShip - функция для отрисовки промохов вокруг убитого трехпалубного корабля компьютера. \r\nfunction drawMissesAroundKilledThreeDeckComputerShip() {\r\n   const killedShip = arrayComputerCells.find(element => element.classList.contains('hit')),\r\n      coordinates = killedShip.id.split('-'),\r\n      y = Number(coordinates[1]),\r\n      rawX = Number(coordinates[2]),\r\n      x = rawX - 1;\r\n\r\n   if (mechanicsFight.computerShips.threeDeck.length === 0) {\r\n      if (!killedShip.classList.contains('vertical')) {\r\n         if (y > 1 && y < 6 && x > 0 && x < 3) {\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n            computerCellsMap[y - 1][x + 3] = 'missed';\r\n            computerCellsMap[y][x + 3] = 'missed';\r\n            computerCellsMap[y + 1][x + 3] = 'missed';\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 3].classList.add('miss');\r\n            computerMapDivs[y][x + 3].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 3].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 0) {\r\n            computerCellsMap[y][x + 3] = 'missed';\r\n            computerCellsMap[y + 1][x + 3] = 'missed';\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n\r\n            computerMapDivs[y][x + 3].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 3].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n\r\n            computerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x > 0 && x < 3) {\r\n            computerCellsMap[y][x + 3] = 'missed';\r\n            computerCellsMap[y + 1][x + 3] = 'missed';\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y][x + 3].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 3].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 6 && x === 3) {\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 3) {\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x === 3) {\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x > 0 && x < 3) {\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n            computerCellsMap[y - 1][x + 3] = 'missed';\r\n            computerCellsMap[y][x + 3] = 'missed';\r\n\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 3].classList.add('miss');\r\n            computerMapDivs[y][x + 3].classList.add('miss');\r\n\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x === 0) {\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n            computerCellsMap[y - 1][x + 3] = 'missed';\r\n            computerCellsMap[y][x + 3] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 3].classList.add('miss');\r\n            computerMapDivs[y][x + 3].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 0 && y < 6 && x === 0) {\r\n            computerCellsMap[y + 1][x] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 2] = 'missed';\r\n            computerCellsMap[y + 1][x + 3] = 'missed';\r\n            computerCellsMap[y][x + 3] = 'missed';\r\n            computerCellsMap[y - 1][x + 3] = 'missed';\r\n            computerCellsMap[y - 1][x + 2] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n\r\n            computerMapDivs[y + 1][x].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 3].classList.add('miss');\r\n            computerMapDivs[y][x + 3].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 3].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 2].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n\r\n            computerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n         }\r\n      } else if (killedShip.classList.contains('vertical')) {\r\n         if (y > 1 && y < 4 && x > 0 && x < 5) {\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n            computerCellsMap[y + 3][x + 1] = 'missed';\r\n            computerCellsMap[y + 3][x] = 'missed';\r\n            computerCellsMap[y + 3][x - 1] = 'missed';\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 3][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 3][x].classList.add('miss');\r\n            computerMapDivs[y + 3][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 0) {\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n            computerCellsMap[y + 3][x + 1] = 'missed';\r\n            computerCellsMap[y + 3][x] = 'missed';\r\n\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 3][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 3][x].classList.add('miss');\r\n\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x > 0 && x < 5) {\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n            computerCellsMap[y + 3][x + 1] = 'missed';\r\n            computerCellsMap[y + 3][x] = 'missed';\r\n            computerCellsMap[y + 3][x - 1] = 'missed';\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 3][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 3][x].classList.add('miss');\r\n            computerMapDivs[y + 3][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 5) {\r\n            computerCellsMap[y + 3][x] = 'missed';\r\n            computerCellsMap[y + 3][x - 1] = 'missed';\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n\r\n            computerMapDivs[y + 3][x].classList.add('miss');\r\n            computerMapDivs[y + 3][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n\r\n            computerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 4 && x === 5) {\r\n            computerCellsMap[y + 3][x] = 'missed';\r\n            computerCellsMap[y + 3][x - 1] = 'missed';\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n\r\n            computerMapDivs[y + 3][x].classList.add('miss');\r\n            computerMapDivs[y + 3][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n\r\n            computerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 4 && x === 5) {\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 4 && x > 0 && x < 5) {\r\n            computerCellsMap[y + 2][x - 1] = 'missed';\r\n            computerCellsMap[y + 1][x - 1] = 'missed';\r\n            computerCellsMap[y][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x - 1] = 'missed';\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n\r\n            computerMapDivs[y + 2][x - 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x - 1].classList.add('miss');\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n\r\n            computerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 4 && x === 0) {\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 4 && x === 0) {\r\n            computerCellsMap[y - 1][x] = 'missed';\r\n            computerCellsMap[y - 1][x + 1] = 'missed';\r\n            computerCellsMap[y][x + 1] = 'missed';\r\n            computerCellsMap[y + 1][x + 1] = 'missed';\r\n            computerCellsMap[y + 2][x + 1] = 'missed';\r\n            computerCellsMap[y + 3][x + 1] = 'missed';\r\n            computerCellsMap[y + 3][x] = 'missed';\r\n\r\n            computerMapDivs[y - 1][x].classList.add('miss');\r\n            computerMapDivs[y - 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 1][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 2][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 3][x + 1].classList.add('miss');\r\n            computerMapDivs[y + 3][x].classList.add('miss');\r\n\r\n            computerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            computerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n         }\r\n      }\r\n   }\r\n}\n\n//# sourceURL=webpack://sea_battle/./src/js/mechanicsFight/drawMissesAroundComputerKilledShips.js?");

/***/ }),

/***/ "./src/js/mechanicsFight/drawMissesAroundKilledShipsPlayer.js":
/*!********************************************************************!*\
  !*** ./src/js/mechanicsFight/drawMissesAroundKilledShipsPlayer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"playerCellsMap\": () => (/* binding */ playerCellsMap),\n/* harmony export */   \"playerMapDivs\": () => (/* binding */ playerMapDivs),\n/* harmony export */   \"drawMissesAroundKilledSingleDeckPlayerShips\": () => (/* binding */ drawMissesAroundKilledSingleDeckPlayerShips),\n/* harmony export */   \"drawMissesAroundKilledDoubleDeckPlayerShips\": () => (/* binding */ drawMissesAroundKilledDoubleDeckPlayerShips),\n/* harmony export */   \"drawMissesAroundKilledThreeDeckPlayerShip\": () => (/* binding */ drawMissesAroundKilledThreeDeckPlayerShip)\n/* harmony export */ });\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/store */ \"./src/js/store/store.js\");\n\r\n\r\nconst {arrayPlayerCells, mechanicsFight} = _store_store__WEBPACK_IMPORTED_MODULE_0__.default.getGameState();\r\n\r\nconst playerCellsMap = _store_store__WEBPACK_IMPORTED_MODULE_0__.default.getCopyEmptyCellsMap();\r\n\r\nconst playerMapDivs = {\r\n   1: arrayPlayerCells.slice(0, 6),\r\n   2: arrayPlayerCells.slice(6, 12),\r\n   3: arrayPlayerCells.slice(12, 18),\r\n   4: arrayPlayerCells.slice(18, 24),\r\n   5: arrayPlayerCells.slice(24, 30),\r\n   6: arrayPlayerCells.slice(30, 36)\r\n};\r\n\r\nfunction removeShipHitClass() {\r\n   arrayPlayerCells.forEach(ship => {\r\n      if (ship.classList.contains('hit')) {\r\n         ship.classList.remove('hit');\r\n      }\r\n   });\r\n}\r\n\r\n// drawMissesAroundKilledSingleDeckPlayerShips - функция для отрисовки промохов вокруг убитого однопалубного корабля игрока.\r\nfunction drawMissesAroundKilledSingleDeckPlayerShips() {\r\n   const killedShip = arrayPlayerCells.find(element => element.classList.contains('hit')),\r\n      coordinates = killedShip.id.split('-'),\r\n      y = Number(coordinates[1]),\r\n      rawX = Number(coordinates[2]),\r\n      x = rawX - 1;\r\n\r\n   if (\r\n      mechanicsFight.playerShips.oneDeck.length === 2 ||\r\n      mechanicsFight.playerShips.oneDeck.length === 1 ||\r\n      mechanicsFight.playerShips.oneDeck.length === 0\r\n   ) {\r\n      if (y > 1 && y < 6 && x > 0 && x < 5) {\r\n         playerCellsMap[y - 1][x - 1] = 'missed';\r\n         playerCellsMap[y - 1][x] = 'missed';\r\n         playerCellsMap[y - 1][x + 1] = 'missed';\r\n         playerCellsMap[y][x + 1] = 'missed';\r\n         playerCellsMap[y + 1][x + 1] = 'missed';\r\n         playerCellsMap[y + 1][x] = 'missed';\r\n         playerCellsMap[y + 1][x - 1] = 'missed';\r\n         playerCellsMap[y][x - 1] = 'missed';\r\n\r\n         playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 1 && x === 0) {\r\n         playerCellsMap[y][x + 1] = 'missed';\r\n         playerCellsMap[y + 1][x + 1] = 'missed';\r\n         playerCellsMap[y + 1][x] = 'missed';\r\n\r\n         playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 1 && x > 0 && x < 5) {\r\n         playerCellsMap[y][x + 1] = 'missed';\r\n         playerCellsMap[y + 1][x + 1] = 'missed';\r\n         playerCellsMap[y + 1][x] = 'missed';\r\n         playerCellsMap[y + 1][x - 1] = 'missed';\r\n         playerCellsMap[y][x - 1] = 'missed';\r\n\r\n         playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 1 && x === 5) {\r\n         playerCellsMap[y + 1][x] = 'missed';\r\n         playerCellsMap[y + 1][x - 1] = 'missed';\r\n         playerCellsMap[y][x - 1] = 'missed';\r\n\r\n         playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y > 1 && y < 6 && x === 5) {\r\n         playerCellsMap[y + 1][x] = 'missed';\r\n         playerCellsMap[y + 1][x - 1] = 'missed';\r\n         playerCellsMap[y][x - 1] = 'missed';\r\n         playerCellsMap[y - 1][x - 1] = 'missed';\r\n         playerCellsMap[y - 1][x] = 'missed';\r\n\r\n         playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 6 && x === 5) {\r\n         playerCellsMap[y][x - 1] = 'missed';\r\n         playerCellsMap[y - 1][x - 1] = 'missed';\r\n         playerCellsMap[y - 1][x] = 'missed';\r\n\r\n         playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 6 && x > 0 && x < 5) {\r\n         playerCellsMap[y][x - 1] = 'missed';\r\n         playerCellsMap[y - 1][x - 1] = 'missed';\r\n         playerCellsMap[y - 1][x] = 'missed';\r\n         playerCellsMap[y - 1][x + 1] = 'missed';\r\n         playerCellsMap[y][x + 1] = 'missed';\r\n\r\n         playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y === 6 && x === 0) {\r\n         playerCellsMap[y - 1][x] = 'missed';\r\n         playerCellsMap[y - 1][x + 1] = 'missed';\r\n         playerCellsMap[y][x + 1] = 'missed';\r\n\r\n         playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n\r\n      } else if (y > 1 && y < 6 && x === 0) {\r\n         playerCellsMap[y - 1][x] = 'missed';\r\n         playerCellsMap[y - 1][x + 1] = 'missed';\r\n         playerCellsMap[y][x + 1] = 'missed';\r\n         playerCellsMap[y + 1][x + 1] = 'missed';\r\n         playerCellsMap[y + 1][x] = 'missed';\r\n\r\n         playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n         playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n         removeShipHitClass();\r\n      }\r\n   }\r\n}\r\n\r\n// drawMissesAroundKilledDoubleDeckPlayerShips - функция для отрисовки промохов вокруг убитого двухпалубного корабля игрока.\r\nfunction drawMissesAroundKilledDoubleDeckPlayerShips() {\r\n   const killedShip = arrayPlayerCells.find(element => element.classList.contains('hit')),\r\n      coordinates = killedShip.id.split('-'),\r\n      y = Number(coordinates[1]),\r\n      rawX = Number(coordinates[2]),\r\n      x = rawX - 1;\r\n\r\n   if (mechanicsFight.playerShips.twoDeck.length === 2 || mechanicsFight.playerShips.twoDeck.length === 0) {\r\n      if (!killedShip.classList.contains('vertical')) {\r\n         if (y > 1 && y < 6 && x > 0 && x < 4) {\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n            playerCellsMap[y][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 0) {\r\n            playerCellsMap[y][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n\r\n            playerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x > 0 && x < 4) {\r\n            playerCellsMap[y][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 4) {\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 6 && x === 0) {\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n            playerCellsMap[y][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 6 && x === 4) {\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x === 4) {\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x > 0 && x < 4) {\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n            playerCellsMap[y][x + 2] = 'missed';\r\n\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x === 0) {\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n            playerCellsMap[y][x + 2] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 2].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n         }\r\n\r\n      } else if (killedShip.classList.contains('vertical')) {\r\n         if (y > 1 && y < 5 && x > 0 && x < 5) {\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x] = 'missed';\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 0) {\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x] = 'missed';\r\n\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x > 0 && x < 5) {\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x] = 'missed';\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 5) {\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 2][x] = 'missed';\r\n\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 5 && x === 5) {\r\n            playerCellsMap[y + 2][x] = 'missed';\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n\r\n            playerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 5 && x === 5) {\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 5 && x > 0 && x < 5) {\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 5 && x === 0) {\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 5 && x === 0) {\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n         }\r\n      }\r\n   }\r\n}\r\n// drawMissesAroundKilledThreeDeckPlayerShip - функция для отрисовки промохов вокруг убитого трехпалубного корабля игрока. \r\nfunction drawMissesAroundKilledThreeDeckPlayerShip() {\r\n   const killedShip = arrayPlayerCells.find(element => element.classList.contains('hit')),\r\n      coordinates = killedShip.id.split('-'),\r\n      y = Number(coordinates[1]),\r\n      rawX = Number(coordinates[2]),\r\n      x = rawX - 1;\r\n\r\n   if (mechanicsFight.playerShips.threeDeck.length === 0) {\r\n      if (!killedShip.classList.contains('vertical')) {\r\n         if (y > 1 && y < 6 && x > 0 && x < 3) {\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n            playerCellsMap[y - 1][x + 3] = 'missed';\r\n            playerCellsMap[y][x + 3] = 'missed';\r\n            playerCellsMap[y + 1][x + 3] = 'missed';\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 0) {\r\n            playerCellsMap[y][x + 3] = 'missed';\r\n            playerCellsMap[y + 1][x + 3] = 'missed';\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n\r\n            playerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x > 0 && x < 3) {\r\n            playerCellsMap[y][x + 3] = 'missed';\r\n            playerCellsMap[y + 1][x + 3] = 'missed';\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 6 && x === 3) {\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 3) {\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x === 3) {\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x > 0 && x < 3) {\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n            playerCellsMap[y - 1][x + 3] = 'missed';\r\n            playerCellsMap[y][x + 3] = 'missed';\r\n\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 6 && x === 0) {\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n            playerCellsMap[y - 1][x + 3] = 'missed';\r\n            playerCellsMap[y][x + 3] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 0 && y < 6 && x === 0) {\r\n            playerCellsMap[y + 1][x] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 2] = 'missed';\r\n            playerCellsMap[y + 1][x + 3] = 'missed';\r\n            playerCellsMap[y][x + 3] = 'missed';\r\n            playerCellsMap[y - 1][x + 3] = 'missed';\r\n            playerCellsMap[y - 1][x + 2] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n\r\n            playerMapDivs[y + 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 3].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 2].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n         }\r\n      } else if (killedShip.classList.contains('vertical')) {\r\n         if (y > 1 && y < 4 && x > 0 && x < 5) {\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n            playerCellsMap[y + 3][x + 1] = 'missed';\r\n            playerCellsMap[y + 3][x] = 'missed';\r\n            playerCellsMap[y + 3][x - 1] = 'missed';\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 0) {\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n            playerCellsMap[y + 3][x + 1] = 'missed';\r\n            playerCellsMap[y + 3][x] = 'missed';\r\n\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x > 0 && x < 5) {\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n            playerCellsMap[y + 3][x + 1] = 'missed';\r\n            playerCellsMap[y + 3][x] = 'missed';\r\n            playerCellsMap[y + 3][x - 1] = 'missed';\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 1 && x === 5) {\r\n            playerCellsMap[y + 3][x] = 'missed';\r\n            playerCellsMap[y + 3][x - 1] = 'missed';\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n\r\n            playerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 4 && x === 5) {\r\n            playerCellsMap[y + 3][x] = 'missed';\r\n            playerCellsMap[y + 3][x - 1] = 'missed';\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n\r\n            playerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 4 && x === 5) {\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 4 && x > 0 && x < 5) {\r\n            playerCellsMap[y + 2][x - 1] = 'missed';\r\n            playerCellsMap[y + 1][x - 1] = 'missed';\r\n            playerCellsMap[y][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x - 1] = 'missed';\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n\r\n            playerMapDivs[y + 2][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x - 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y === 4 && x === 0) {\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n\r\n         } else if (y > 1 && y < 4 && x === 0) {\r\n            playerCellsMap[y - 1][x] = 'missed';\r\n            playerCellsMap[y - 1][x + 1] = 'missed';\r\n            playerCellsMap[y][x + 1] = 'missed';\r\n            playerCellsMap[y + 1][x + 1] = 'missed';\r\n            playerCellsMap[y + 2][x + 1] = 'missed';\r\n            playerCellsMap[y + 3][x + 1] = 'missed';\r\n            playerCellsMap[y + 3][x] = 'missed';\r\n\r\n            playerMapDivs[y - 1][x].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y - 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 1][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 2][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x + 1].innerHTML = `<div class='missed'></div>`;\r\n            playerMapDivs[y + 3][x].innerHTML = `<div class='missed'></div>`;\r\n\r\n            removeShipHitClass();\r\n         }\r\n      }\r\n   }\r\n}\n\n//# sourceURL=webpack://sea_battle/./src/js/mechanicsFight/drawMissesAroundKilledShipsPlayer.js?");

/***/ }),

/***/ "./src/js/placementShipsComputer/PlacementShipsComputer.js":
/*!*****************************************************************!*\
  !*** ./src/js/placementShipsComputer/PlacementShipsComputer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PlacementShipsComputer\": () => (/* binding */ PlacementShipsComputer)\n/* harmony export */ });\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/store */ \"./src/js/store/store.js\");\n\r\n\r\n\r\nconst PlacementShipsComputer = {\r\n   init: () => {\r\n      const {\r\n         computerState, arrayComputerCells, orientationEnum, shipTypeComputer\r\n      } = _store_store__WEBPACK_IMPORTED_MODULE_0__.default.getGameState();\r\n\r\n      const computerCellsMap = _store_store__WEBPACK_IMPORTED_MODULE_0__.default.getCopyEmptyCellsMap();\r\n\r\n      const computerMapDivs = {\r\n         1: arrayComputerCells.slice(0, 6),\r\n         2: arrayComputerCells.slice(6, 12),\r\n         3: arrayComputerCells.slice(12, 18),\r\n         4: arrayComputerCells.slice(18, 24),\r\n         5: arrayComputerCells.slice(24, 30),\r\n         6: arrayComputerCells.slice(30, 36)\r\n      };\r\n\r\n      function drawNumberShipsComputer() {\r\n         let countOne = 0,\r\n            countTwo = 0,\r\n            countThree = 0;\r\n\r\n         arrayComputerCells.forEach((ship) => {\r\n            if (ship.classList.contains('activeOneDeckComputerShip')) {\r\n               countOne++;\r\n\r\n            } else if (ship.classList.contains('activeTwoDeckComputerShip')) {\r\n               countTwo++;\r\n\r\n            } else if (ship.classList.contains('activeThreeDeckComputerShip')) {\r\n               countThree++;\r\n            }\r\n         });\r\n\r\n         if (countOne === 1) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsComputer.innerHTML = '1';\r\n         } else if (countOne === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsComputer.innerHTML = '2';\r\n         } else if (countOne === 3) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsComputer.innerHTML = '3';\r\n         }\r\n\r\n         if (countTwo === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countDoubleDeckShipsComputer.innerHTML = '1';\r\n         } else if (countTwo === 4) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countDoubleDeckShipsComputer.innerHTML = '2';\r\n         }\r\n\r\n         if (countThree === 3) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countThreeDeckShipsComputer.innerHTML = '1';\r\n         }\r\n      }\r\n\r\n      function drawShip(x, y, shipType, orientation) {\r\n         const x2 = x + 1,\r\n            x3 = x + 2,\r\n            y2 = y + 1,\r\n            y3 = y + 2;\r\n\r\n         if (shipType === 1) {\r\n            computerCellsMap[y][x] = \"ship1\";\r\n            computerMapDivs[y][x].classList.add('activeOneDeckComputerShip');\r\n\r\n            shipTypeComputer.shipTypeOne.push('ship');\r\n\r\n            drawNumberShipsComputer();\r\n            startGame();\r\n\r\n         } else if (shipType === 2 && orientation === 'h') {\r\n            computerCellsMap[y][x] = \"ship2\";\r\n            computerCellsMap[y][x2] = \"ship2\";\r\n\r\n            computerMapDivs[y][x].classList.add('activeTwoDeckComputerShip');\r\n            computerMapDivs[y][x2].classList.add('activeTwoDeckComputerShip');\r\n\r\n            shipTypeComputer.shipTypeTwo.push('ship');\r\n\r\n            drawNumberShipsComputer();\r\n            startGame();\r\n\r\n         } else if (shipType === 3 && orientation === 'h') {\r\n            computerCellsMap[y][x] = \"ship3\";\r\n            computerCellsMap[y][x2] = \"ship3\";\r\n            computerCellsMap[y][x3] = \"ship3\";\r\n\r\n            computerMapDivs[y][x].classList.add('activeThreeDeckComputerShip');\r\n            computerMapDivs[y][x2].classList.add('activeThreeDeckComputerShip');\r\n            computerMapDivs[y][x3].classList.add('activeThreeDeckComputerShip');\r\n\r\n            shipTypeComputer.shipTypeThree.push('ship');\r\n\r\n            drawNumberShipsComputer();\r\n            startGame();\r\n\r\n         } else if (shipType === 2 && orientation === 'v') {\r\n            computerCellsMap[y][x] = \"ship2\";\r\n            computerCellsMap[y2][x] = \"ship2\";\r\n\r\n            computerMapDivs[y][x].classList.add('activeTwoDeckComputerShip');\r\n            computerMapDivs[y2][x].classList.add('activeTwoDeckComputerShip');\r\n\r\n            computerMapDivs[y][x].classList.add('vertical');\r\n            computerMapDivs[y2][x].classList.add('vertical');\r\n\r\n            shipTypeComputer.shipTypeTwo.push('ship');\r\n\r\n            drawNumberShipsComputer();\r\n            startGame();\r\n\r\n         } else if (shipType === 3 && orientation === 'v') {\r\n            computerCellsMap[y][x] = \"ship3\";\r\n            computerCellsMap[y2][x] = \"ship3\";\r\n            computerCellsMap[y3][x] = \"ship3\";\r\n\r\n            computerMapDivs[y][x].classList.add('activeThreeDeckComputerShip');\r\n            computerMapDivs[y2][x].classList.add('activeThreeDeckComputerShip');\r\n            computerMapDivs[y3][x].classList.add('activeThreeDeckComputerShip');\r\n\r\n            computerMapDivs[y][x].classList.add('vertical');\r\n            computerMapDivs[y2][x].classList.add('vertical');\r\n            computerMapDivs[y3][x].classList.add('vertical');\r\n\r\n            shipTypeComputer.shipTypeThree.push('ship');\r\n\r\n            drawNumberShipsComputer();\r\n            startGame();\r\n         }\r\n      }\r\n\r\n      function getRandomShip() {\r\n         computerState.randomShip = arrayComputerCells[Math.floor(Math.random() * arrayComputerCells.length)];\r\n      }\r\n\r\n      function getRandomOrientationShip() {\r\n         computerState.randomOrientation = orientationEnum[Math.floor(Math.random() * orientationEnum.length)];\r\n      }\r\n\r\n      function placeShipToMap(rawX, y, shipType, orientation = \"h\") {\r\n         const x = rawX - 1;\r\n\r\n         // Горизонтальное положение\r\n\r\n         if (orientation === orientationEnum[0]) {\r\n            if (shipType === 1) {\r\n               if (computerCellsMap[y][x] !== null) {\r\n                  return;\r\n\r\n               } else if (y > 1 && y < 6 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 1 && x === 0) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 1 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 1 && x === 5) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 5) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 6 && x === 5) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 6 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else {\r\n                  restartRandom();\r\n               }\r\n            }\r\n\r\n            if (shipType === 2) {\r\n               if (computerCellsMap[y][x] !== null || computerCellsMap[y][x + 1] !== null) {\r\n                  restartRandom();\r\n               } else if (y > 1 && y < 6 && x > 0 && x < 4) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null &&\r\n                     computerCellsMap[y][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 1 && x === 0) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 1 && x > 0 && x < 4) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 1 && x === 4) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null &&\r\n                     computerCellsMap[y][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 4) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 6 && x === 4) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 6 && x > 0 && x < 4) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null &&\r\n                     computerCellsMap[y][x + 2] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null &&\r\n                     computerCellsMap[y][x + 2] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else {\r\n                  restartRandom();\r\n               }\r\n            }\r\n\r\n            if (shipType === 3) {\r\n               if (computerCellsMap[y][x] !== null || computerCellsMap[y][x + 1] !== null || computerCellsMap[y][x + 2] !== null) {\r\n                  restartRandom();\r\n               } else if (y > 1 && y < 6 && x > 0 && x < 3) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null &&\r\n                     computerCellsMap[y - 1][x + 3] === null &&\r\n                     computerCellsMap[y][x + 3] === null &&\r\n                     computerCellsMap[y + 1][x + 3] === null &&\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 1 && x === 0) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x + 3] === null &&\r\n                     computerCellsMap[y + 1][x + 3] === null &&\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 1 && x > 0 && x < 3) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x + 3] === null &&\r\n                     computerCellsMap[y + 1][x + 3] === null &&\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 3) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 1 && x === 3) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x - 1] === null &&\r\n                     computerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 6 && x === 3) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 6 && x > 0 && x < 3) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x - 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null &&\r\n                     computerCellsMap[y - 1][x + 3] === null &&\r\n                     computerCellsMap[y][x + 3] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y === 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y - 1][x] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null &&\r\n                     computerCellsMap[y - 1][x + 3] === null &&\r\n                     computerCellsMap[y][x + 3] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else if (y > 0 && y < 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     computerCellsMap[y + 1][x] === null &&\r\n                     computerCellsMap[y + 1][x + 1] === null &&\r\n                     computerCellsMap[y + 1][x + 2] === null &&\r\n                     computerCellsMap[y + 1][x + 3] === null &&\r\n                     computerCellsMap[y][x + 3] === null &&\r\n                     computerCellsMap[y - 1][x + 3] === null &&\r\n                     computerCellsMap[y - 1][x + 2] === null &&\r\n                     computerCellsMap[y - 1][x + 1] === null &&\r\n                     computerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  } else {\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else {\r\n                  restartRandom();\r\n               }\r\n            }\r\n         }\r\n\r\n         // Вертикальное положение\r\n\r\n         if (orientation === orientationEnum[1]) {\r\n            if (shipType === 2) {\r\n               if (y < 6) {\r\n                  if (computerCellsMap[y][x] !== null || computerCellsMap[y + 1][x] !== null) {\r\n                     restartRandom();\r\n\r\n                  } else if (y > 1 && y < 5 && x > 0 && x < 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y - 1][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x] === null &&\r\n                        computerCellsMap[y - 1][x + 1] === null &&\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x] === null &&\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null\r\n                     ) {\r\n                        drawShip(x, y, 2, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 1 && x === 0) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x] === null\r\n                     ) {\r\n                        drawShip(x, y, 2, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 1 && x > 0 && x < 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x] === null &&\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null\r\n                     ) {\r\n                        drawShip(x, y, 2, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 1 && x === 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 2][x] === null\r\n                     ) {\r\n                        drawShip(x, y, 2, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y > 1 && y < 5 && x === 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y + 2][x] === null &&\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x] === null\r\n                     ) {\r\n                        drawShip(x, y, 2, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 5 && x === 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x] === null\r\n                     ) {\r\n                        drawShip(x, y, 2, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 5 && x > 0 && x < 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x] === null &&\r\n                        computerCellsMap[y - 1][x + 1] === null &&\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null\r\n                     ) {\r\n                        drawShip(x, y, 2, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 5 && x === 0) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y - 1][x] === null &&\r\n                        computerCellsMap[y - 1][x + 1] === null &&\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null\r\n                     ) {\r\n                        drawShip(x, y, 2, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y > 1 && y < 5 && x === 0) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y - 1][x] === null &&\r\n                        computerCellsMap[y - 1][x + 1] === null &&\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x] === null\r\n                     ) {\r\n                        drawShip(x, y, 2, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else {\r\n\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else {\r\n                  restartRandom();\r\n               }\r\n            }\r\n\r\n            if (shipType === 3) {\r\n               if (y < 5) {\r\n                  if (computerCellsMap[y][x] !== null || computerCellsMap[y + 1][x] !== null || computerCellsMap[y + 2][x] !== null) {\r\n                     restartRandom();\r\n                  } else if (y > 1 && y < 4 && x > 0 && x < 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y - 1][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x] === null &&\r\n                        computerCellsMap[y - 1][x + 1] === null &&\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null &&\r\n                        computerCellsMap[y + 3][x + 1] === null &&\r\n                        computerCellsMap[y + 3][x] === null &&\r\n                        computerCellsMap[y + 3][x - 1] === null &&\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null\r\n                     ) {\r\n                        drawShip(x, y, 3, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 1 && x === 0) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null &&\r\n                        computerCellsMap[y + 3][x + 1] === null &&\r\n                        computerCellsMap[y + 3][x] === null\r\n                     ) {\r\n                        drawShip(x, y, 3, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 1 && x > 0 && x < 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null &&\r\n                        computerCellsMap[y + 3][x + 1] === null &&\r\n                        computerCellsMap[y + 3][x] === null &&\r\n                        computerCellsMap[y + 3][x - 1] === null &&\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null\r\n                     ) {\r\n                        drawShip(x, y, 3, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 1 && x === 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y + 3][x] === null &&\r\n                        computerCellsMap[y + 3][x - 1] === null &&\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null\r\n                     ) {\r\n                        drawShip(x, y, 3, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y > 1 && y < 4 && x === 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y + 3][x] === null &&\r\n                        computerCellsMap[y + 3][x - 1] === null &&\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x] === null\r\n                     ) {\r\n                        drawShip(x, y, 3, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 4 && x === 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x] === null\r\n                     ) {\r\n                        drawShip(x, y, 3, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 4 && x > 0 && x < 5) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y + 2][x - 1] === null &&\r\n                        computerCellsMap[y + 1][x - 1] === null &&\r\n                        computerCellsMap[y][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x - 1] === null &&\r\n                        computerCellsMap[y - 1][x] === null &&\r\n                        computerCellsMap[y - 1][x + 1] === null &&\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null\r\n                     ) {\r\n                        drawShip(x, y, 3, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y === 4 && x === 0) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y - 1][x] === null &&\r\n                        computerCellsMap[y - 1][x + 1] === null &&\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null\r\n                     ) {\r\n                        drawShip(x, y, 3, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else if (y > 1 && y < 4 && x === 0) {\r\n                     if\r\n                        (\r\n                        computerCellsMap[y - 1][x] === null &&\r\n                        computerCellsMap[y - 1][x + 1] === null &&\r\n                        computerCellsMap[y][x + 1] === null &&\r\n                        computerCellsMap[y + 1][x + 1] === null &&\r\n                        computerCellsMap[y + 2][x + 1] === null &&\r\n                        computerCellsMap[y + 3][x + 1] === null &&\r\n                        computerCellsMap[y + 3][x] === null\r\n                     ) {\r\n                        drawShip(x, y, 3, orientation);\r\n                     } else {\r\n                        restartRandom();\r\n                     }\r\n\r\n                  } else {\r\n\r\n                     restartRandom();\r\n                  }\r\n\r\n               } else {\r\n                  restartRandom();\r\n               }\r\n            }\r\n\r\n         }\r\n      }\r\n\r\n      function restartRandom() {\r\n         if (computerState.counterFailedAttempt === 30) {\r\n            computerState.counterFailedAttempt = 0;\r\n\r\n            shipTypeComputer.shipTypeOne = [];\r\n            shipTypeComputer.shipTypeTwo = [];\r\n            shipTypeComputer.shipTypeThree = [];\r\n\r\n            for (let key in computerCellsMap) {\r\n               if (Array.isArray(computerCellsMap[key])) {\r\n                  computerCellsMap[key].forEach((element, index) => {\r\n                     if (element === 'ship1' || element === 'ship2' || element === 'ship3') {\r\n                        computerCellsMap[key][index] = null;\r\n                     }\r\n                  })\r\n               }\r\n            }\r\n\r\n            arrayComputerCells.forEach(element => {\r\n               if (element.classList.contains('activeOneDeckComputerShip')) {\r\n                  element.classList.remove('activeOneDeckComputerShip');\r\n               } else if (element.classList.contains('activeTwoDeckComputerShip')) {\r\n                  element.classList.remove('activeTwoDeckComputerShip');\r\n               } else if (element.classList.contains('activeThreeDeckComputerShip')) {\r\n                  element.classList.remove('activeThreeDeckComputerShip');\r\n               }\r\n            })\r\n            startGame();\r\n\r\n         } else {\r\n            computerState.counterFailedAttempt++\r\n            startGame();\r\n         }\r\n      }\r\n\r\n      function startGame() {\r\n         getRandomShip();\r\n\r\n         getRandomOrientationShip();\r\n\r\n         if (\r\n            computerState.randomShip.classList.contains('activeOneDeckComputerShip') ||\r\n            computerState.randomShip.classList.contains('activeTwoDeckComputerShip') ||\r\n            computerState.randomShip.classList.contains('activeThreeDeckComputerShip')\r\n         ) {\r\n            startGame();\r\n         } else {\r\n            const coordinates = computerState.randomShip.id.split(\"-\"),\r\n               y = Number(coordinates[1]),\r\n               x = Number(coordinates[2]);\r\n\r\n            if (shipTypeComputer.shipTypeThree.length < 1) {\r\n               placeShipToMap(x, y, 3, computerState.randomOrientation);\r\n            } else if (shipTypeComputer.shipTypeTwo.length < 2) {\r\n               placeShipToMap(x, y, 2, computerState.randomOrientation);\r\n            } else if (shipTypeComputer.shipTypeOne.length < 3) {\r\n               placeShipToMap(x, y, 1);\r\n            } else {\r\n               return;\r\n            }\r\n         }\r\n\r\n      }\r\n\r\n      startGame();\r\n   }\r\n}\n\n//# sourceURL=webpack://sea_battle/./src/js/placementShipsComputer/PlacementShipsComputer.js?");

/***/ }),

/***/ "./src/js/placementShipsPlayer/PlacementShipsPlayer.js":
/*!*************************************************************!*\
  !*** ./src/js/placementShipsPlayer/PlacementShipsPlayer.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PlacementShipsUser\": () => (/* binding */ PlacementShipsUser)\n/* harmony export */ });\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/store */ \"./src/js/store/store.js\");\n\r\n\r\n\r\nconst PlacementShipsUser = {\r\n   init: () => {\r\n      const { arrayPlayerCells, playerState, orientationEnum} = _store_store__WEBPACK_IMPORTED_MODULE_0__.default.getGameState();\r\n\r\n      const playerMapDivs = {\r\n         1: arrayPlayerCells.slice(0, 6),\r\n         2: arrayPlayerCells.slice(6, 12),\r\n         3: arrayPlayerCells.slice(12, 18),\r\n         4: arrayPlayerCells.slice(18, 24),\r\n         5: arrayPlayerCells.slice(24, 30),\r\n         6: arrayPlayerCells.slice(30, 36)\r\n      };\r\n      \r\n      const playerCellsMap = _store_store__WEBPACK_IMPORTED_MODULE_0__.default.getCopyEmptyCellsMap();\r\n      \r\n      // drawNumberShipsUser - отрисовка количества выставленных кораблей на поле игрока.\r\n      function drawNumberShipsUser() {\r\n         let countOne = 0,\r\n            countTwo = 0,\r\n            countThree = 0;\r\n\r\n         arrayPlayerCells.forEach((cell) => {\r\n            if (cell.classList.contains('activeOneDeckShip')) {\r\n               countOne++;\r\n\r\n            } else if (cell.classList.contains('activeTwoDeckShip')) {\r\n               countTwo++;\r\n\r\n            } else if (cell.classList.contains('activeThreeDeckShip')) {\r\n               countThree++;\r\n            }\r\n         });\r\n\r\n         if (countOne === 1) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsPlayer.innerHTML = '1';\r\n         } else if (countOne === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsPlayer.innerHTML = '2';\r\n         } else if (countOne === 3) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countSingleDeckShipsPlayer.innerHTML = '3';\r\n         }\r\n\r\n         if (countTwo === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countDoubleDeckShipsPlayer.innerHTML = '1';\r\n         } else if (countTwo === 4) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countDoubleDeckShipsPlayer.innerHTML = '2';\r\n         }\r\n\r\n         if (countThree === 3) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.countThreeDeckShipsPlayer.innerHTML = '1';\r\n         }\r\n      }\r\n\r\n      // disabledButtonStartGame - выключение и включение активности кнопки \"Начать игру\".\r\n      const disabledButtonStartGame = () => {\r\n         if (\r\n            playerState.scoreOneShip === 3 &&\r\n            playerState.scoreTwoShip === 4 &&\r\n            playerState.scoreThreeShip === 3\r\n         ) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.buttonStartGame.disabled = false;\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.buttonStartGame.style.cursor = \"pointer\";\r\n\r\n         } else {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.buttonStartGame.disabled = true;\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.buttonStartGame.style.cursor = \"not-allowed\";\r\n         }\r\n      };\r\n\r\n      // getCoordinates - получение координат ячейки для выставления кораблей.\r\n      function getCoordinates(event) {\r\n         const coordinates = event.target.id.split(\"-\"),\r\n            y = Number(coordinates[1]),\r\n            x = Number(coordinates[2]),\r\n            shipType = Number(playerState.typeShip);\r\n\r\n         if (shipType === 1 && playerState.scoreOneShip === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.oneDeckShip.classList.remove(\"targetShip\");\r\n\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.playerGameCells.forEach(ship => {\r\n               ship.removeEventListener('click', getCoordinates);\r\n            });\r\n\r\n         } else if (shipType === 2 && playerState.scoreTwoShip === 2) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.twoDeckShip.classList.remove(\"targetShip\");\r\n\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.playerGameCells.forEach(ship => {\r\n               ship.removeEventListener('click', getCoordinates);\r\n            });\r\n\r\n\r\n         } else if (shipType === 3 && playerState.scoreThreeShip === 0) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.threeDeckShip.classList.remove(\"targetShip\");\r\n\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.playerGameCells.forEach(ship => {\r\n               ship.removeEventListener('click', getCoordinates);\r\n            });\r\n         }\r\n\r\n         placeShipToMap(x, y, shipType);\r\n      }\r\n\r\n      _store_store__WEBPACK_IMPORTED_MODULE_0__.oneDeckShip.addEventListener('click', (event) => {\r\n         if (playerState.scoreOneShip === 3) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.oneDeckShip.removeEventListener('click');\r\n         }\r\n\r\n         playerState.typeShip = event.target.id;\r\n\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.oneDeckShip.classList.add(\"targetShip\");\r\n\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.playerGameCells.forEach(ship => {\r\n            ship.addEventListener('click', getCoordinates);\r\n         });\r\n      });\r\n\r\n      _store_store__WEBPACK_IMPORTED_MODULE_0__.twoDeckShip.addEventListener('click', (event) => {\r\n         if (playerState.scoreTwoShip === 4) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.twoDeckShip.removeEventListener('click',);\r\n         }\r\n\r\n         playerState.typeShip = event.target.parentNode.id;\r\n\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.twoDeckShip.classList.add(\"targetShip\");\r\n\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.playerGameCells.forEach(ship => {\r\n            ship.addEventListener('click', getCoordinates);\r\n         });\r\n      });\r\n\r\n      _store_store__WEBPACK_IMPORTED_MODULE_0__.threeDeckShip.addEventListener('click', (event) => {\r\n         if (playerState.scoreThreeShip === 3) {\r\n            _store_store__WEBPACK_IMPORTED_MODULE_0__.threeDeckShip.removeEventListener('click',);\r\n         }\r\n\r\n         playerState.typeShip = event.target.parentNode.id;\r\n\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.threeDeckShip.classList.add(\"targetShip\");\r\n\r\n         _store_store__WEBPACK_IMPORTED_MODULE_0__.playerGameCells.forEach(ship => {\r\n            ship.addEventListener('click', getCoordinates);\r\n         });\r\n\r\n      });\r\n\r\n      /* setOrientationTwoDeckShip -\r\n         setOrientationThreeDeckShip -\r\n         changeOrientationTwoDeckShipOne ---> функции для смены ориентации 2 и 3 палубных кораблей,\r\n         changeOrientationTwoDeckShipTwo -             из горизонтального положения в вертикальное\r\n         changeOrientationThreeDeckShipOne -\r\n         changeOrientationThreeDeckShipThree -\r\n         reverseChangeOrientationTwoDeckShipOne - \r\n         reverseChangeOrientationTwoDeckShipTwo - \r\n      */\r\n      function setOrientationTwoDeckShip(y, x, x2) {\r\n         playerCellsMap[y][x] = null;\r\n         playerCellsMap[y][x2] = null;\r\n\r\n         playerMapDivs[y][x].classList.remove('activeTwoDeckShip');\r\n         playerMapDivs[y][x2].classList.remove('activeTwoDeckShip');\r\n\r\n         playerMapDivs[y][x].removeEventListener('click', changeOrientationTwoDeckShipOne);\r\n         playerMapDivs[y][x2].removeEventListener('click', changeOrientationTwoDeckShipTwo);\r\n      }\r\n\r\n      function reverseChangeOrientationTwoDeckShipOne(event) {\r\n         const coordinates = event.target.id.split(\"-\"),\r\n            y = Number(coordinates[1]),\r\n            x = Number(coordinates[2]) - 1;\r\n\r\n         playerCellsMap[y][x] = null;\r\n         playerCellsMap[y + 1][x] = null;\r\n\r\n         playerMapDivs[y][x].classList.remove('activeTwoDeckShip', 'vertical');\r\n         playerMapDivs[y + 1][x].classList.remove('activeTwoDeckShip', 'vertical');\r\n\r\n         playerMapDivs[y][x].removeEventListener('click', reverseChangeOrientationTwoDeckShipOne);\r\n\r\n         placeShipToMap(x + 1, y, 2);\r\n      }\r\n\r\n      function reverseChangeOrientationTwoDeckShipTwo(event) {\r\n         const coordinates = event.target.id.split(\"-\"),\r\n            y = Number(coordinates[1]),\r\n            x = Number(coordinates[2]) - 1;\r\n\r\n         playerCellsMap[y][x] = null;\r\n         playerCellsMap[y + 1][x] = null;\r\n\r\n         playerMapDivs[y][x].classList.remove('activeTwoDeckShip', 'vertical');\r\n         playerMapDivs[y + 1][x].classList.remove('activeTwoDeckShip', 'vertical');\r\n\r\n         playerMapDivs[y][x].removeEventListener('click', reverseChangeOrientationTwoDeckShipTwo);\r\n\r\n         playerCellsMap[y][x - 1] = \"ship2\";\r\n         playerCellsMap[y][x] = \"ship2\";\r\n\r\n         playerMapDivs[y][x - 1].classList.add('activeTwoDeckShip');\r\n         playerMapDivs[y][x].classList.add('activeTwoDeckShip');\r\n\r\n         playerMapDivs[y][x - 1].classList.add('changeableOrientationTwoDeckShipOne');\r\n         playerMapDivs[y][x].classList.add('changeableOrientationTwoDeckShipTwo');\r\n\r\n         playerMapDivs[y][x - 1].addEventListener('click', changeOrientationTwoDeckShipOne);\r\n\r\n         playerMapDivs[y][x].addEventListener('click', changeOrientationTwoDeckShipTwo);\r\n      }\r\n\r\n      function setOrientationThreeDeckShip(y, x, x2, x3) {\r\n         playerCellsMap[y][x] = null;\r\n         playerCellsMap[y][x2] = null;\r\n         playerCellsMap[y][x3] = null;\r\n\r\n         playerMapDivs[y][x].classList.remove('activeThreeDeckShip');\r\n         playerMapDivs[y][x2].classList.remove('activeThreeDeckShip');\r\n         playerMapDivs[y][x3].classList.remove('activeThreeDeckShip');\r\n\r\n         playerMapDivs[y][x].removeEventListener('click', changeOrientationThreeDeckShipOne);\r\n         playerMapDivs[y][x3].removeEventListener('click', changeOrientationThreeDeckShipThree);\r\n      }\r\n\r\n      const changeOrientationTwoDeckShipOne = (event) => {\r\n         const coordinates = event.target.id.split(\"-\"),\r\n            y = Number(coordinates[1]),\r\n            x = Number(coordinates[2]) - 1,\r\n            x2 = x + 1;\r\n\r\n         if (\r\n            y === 5 &&\r\n            x < 5 &&\r\n            playerCellsMap[y + 1][x] === null &&\r\n            playerCellsMap[y + 1][x2] === null\r\n         ) {\r\n            setOrientationTwoDeckShip(y, x, x2);\r\n\r\n            placeShipToMap(x + 1, y, 2, orientationEnum[1]);\r\n\r\n         } else if (\r\n            y < 6 &&\r\n            x > 0 &&\r\n            playerCellsMap[y + 1][x] === null &&\r\n            playerCellsMap[y + 2][x] === null &&\r\n            playerCellsMap[y + 2][x2] === null &&\r\n            playerCellsMap[y + 2][x - 1] === null\r\n         ) {\r\n            setOrientationTwoDeckShip(y, x, x2);\r\n\r\n            placeShipToMap(x + 1, y, 2, orientationEnum[1]);\r\n\r\n         } else if (\r\n            y < 6 &&\r\n            x === 0 &&\r\n            playerCellsMap[y + 1][x] === null &&\r\n            playerCellsMap[y + 2][x] === null &&\r\n            playerCellsMap[y + 2][x2] === null\r\n         ) {\r\n            setOrientationTwoDeckShip(y, x, x2);\r\n\r\n            placeShipToMap(x + 1, y, 2, orientationEnum[1]);\r\n\r\n         } else {\r\n            playerMapDivs[y][x].removeEventListener('click', changeOrientationTwoDeckShipOne);\r\n         }\r\n\r\n      };\r\n\r\n      const changeOrientationTwoDeckShipTwo = (event) => {\r\n         const coordinates = event.target.id.split(\"-\"),\r\n            y = Number(coordinates[1]),\r\n            x = Number(coordinates[2]) - 2,\r\n            x2 = x + 1,\r\n            x3 = x + 2;\r\n\r\n         if (\r\n            y === 5 &&\r\n            x2 > 0 &&\r\n            playerCellsMap[y + 1][x2] === null &&\r\n            playerCellsMap[y + 1][x] === null\r\n         ) {\r\n            setOrientationTwoDeckShip(y, x, x2);\r\n\r\n            placeShipToMap(x + 2, y, 2, orientationEnum[1]);\r\n\r\n         } else if (\r\n            y < 6 &&\r\n            x2 < 5 &&\r\n            playerCellsMap[y + 1][x2] === null &&\r\n            playerCellsMap[y + 2][x2] === null &&\r\n            playerCellsMap[y + 2][x] === null &&\r\n            playerCellsMap[y + 2][x3] === null\r\n         ) {\r\n            setOrientationTwoDeckShip(y, x, x2);\r\n\r\n            placeShipToMap(x + 2, y, 2, orientationEnum[1]);\r\n\r\n         } else if (\r\n            y < 6 &&\r\n            x2 === 5 &&\r\n            playerCellsMap[y + 1][x2] === null &&\r\n            playerCellsMap[y + 2][x2] === null &&\r\n            playerCellsMap[y + 2][x] === null\r\n         ) {\r\n            setOrientationTwoDeckShip(y, x, x2);\r\n\r\n            placeShipToMap(x + 2, y, 2, orientationEnum[1]);\r\n\r\n         } else {\r\n            playerMapDivs[y][x2].removeEventListener('click', changeOrientationTwoDeckShipTwo);\r\n         }\r\n\r\n      };\r\n\r\n      function reverseChangeOrientationThreeDeckShipOne(event) {\r\n         const coordinates = event.target.id.split(\"-\"),\r\n            y = Number(coordinates[1]),\r\n            x = Number(coordinates[2]) - 1;\r\n\r\n         playerCellsMap[y][x] = null;\r\n         playerCellsMap[y + 1][x] = null;\r\n         playerCellsMap[y + 2][x] = null;\r\n\r\n         playerMapDivs[y][x].classList.remove('activeThreeDeckShip', 'vertical');\r\n         playerMapDivs[y + 1][x].classList.remove('activeThreeDeckShip', 'vertical');\r\n         playerMapDivs[y + 2][x].classList.remove('activeThreeDeckShip', 'vertical');\r\n\r\n         playerMapDivs[y][x].removeEventListener('click', reverseChangeOrientationThreeDeckShipOne);\r\n\r\n         placeShipToMap(x + 1, y, 3);\r\n      }\r\n\r\n      function reverseChangeOrientationThreeDeckShipThree(event) {\r\n         const coordinates = event.target.id.split(\"-\"),\r\n            y = Number(coordinates[1]),\r\n            x = Number(coordinates[2]) - 1;\r\n\r\n         playerCellsMap[y][x] = null;\r\n         playerCellsMap[y + 1][x] = null;\r\n         playerCellsMap[y + 2][x] = null;\r\n\r\n         playerMapDivs[y][x].classList.remove('activeThreeDeckShip', 'vertical');\r\n         playerMapDivs[y + 1][x].classList.remove('activeThreeDeckShip', 'vertical');\r\n         playerMapDivs[y + 2][x].classList.remove('activeThreeDeckShip', 'vertical');\r\n\r\n         playerMapDivs[y][x].removeEventListener('click', reverseChangeOrientationThreeDeckShipThree);\r\n\r\n         playerCellsMap[y][x - 1] = \"ship2\";\r\n         playerCellsMap[y][x - 2] = \"ship2\";\r\n         playerCellsMap[y][x] = \"ship2\";\r\n\r\n         playerMapDivs[y][x - 1].classList.add('activeThreeDeckShip');\r\n         playerMapDivs[y][x - 2].classList.add('activeThreeDeckShip');\r\n         playerMapDivs[y][x].classList.add('activeThreeDeckShip');\r\n\r\n         playerMapDivs[y][x - 2].classList.add('changeableOrientationThreeDeckShipOne');\r\n         playerMapDivs[y][x].classList.add('changeableOrientationThreeDeckShipThree');\r\n\r\n         playerMapDivs[y][x - 2].addEventListener('click', changeOrientationThreeDeckShipOne);\r\n\r\n         playerMapDivs[y][x].addEventListener('click', changeOrientationThreeDeckShipThree);\r\n      }\r\n\r\n      const changeOrientationThreeDeckShipOne = (event) => {\r\n         const coordinates = event.target.id.split(\"-\"),\r\n            y = Number(coordinates[1]),\r\n            x = Number(coordinates[2]) - 1,\r\n            x2 = x + 1,\r\n            x3 = x + 2;\r\n\r\n         if (y < 5 && playerCellsMap[y + 1][x] === null && playerCellsMap[y + 2][x] === null) {\r\n            setOrientationThreeDeckShip(y, x, x2, x3);\r\n\r\n            placeShipToMap(x + 1, y, 3, orientationEnum[1]);\r\n\r\n         } else {\r\n            playerMapDivs[y][x].removeEventListener('click', changeOrientationThreeDeckShipOne);\r\n         }\r\n\r\n      };\r\n\r\n      const changeOrientationThreeDeckShipThree = (event) => {\r\n         const coordinates = event.target.id.split(\"-\"),\r\n            y = Number(coordinates[1]),\r\n            x = Number(coordinates[2]) - 3,\r\n            x2 = x + 1,\r\n            x3 = x + 2;\r\n\r\n         if (y < 5 && playerCellsMap[y + 1][x3] === null && playerCellsMap[y + 2][x3] === null) {\r\n            setOrientationThreeDeckShip(y, x, x2, x3);\r\n\r\n            placeShipToMap(x + 3, y, 3, orientationEnum[1]);\r\n\r\n         } else {\r\n            playerMapDivs[y][x3].removeEventListener('click', changeOrientationThreeDeckShipThree);\r\n         }\r\n\r\n\r\n      };\r\n\r\n      // drawShip - функция для рисования кораблей на игровом поле.\r\n      function drawShip(x, y, shipType, orientation) {\r\n         const x2 = x + 1,\r\n            x3 = x + 2,\r\n            y2 = y + 1,\r\n            y3 = y + 2;\r\n\r\n         if (shipType === 1) {\r\n            playerCellsMap[y][x] = \"ship1\";\r\n\r\n            playerMapDivs[y][x].classList.add('activeOneDeckShip');\r\n\r\n            playerState.scoreOneShip = 0;\r\n\r\n            arrayPlayerCells.forEach((ship) => {\r\n               if (ship.classList.contains(\"activeOneDeckShip\")) {\r\n                  playerState.scoreOneShip++;\r\n               }\r\n            });\r\n\r\n            if (playerState.scoreOneShip === 1) {\r\n               _store_store__WEBPACK_IMPORTED_MODULE_0__.scoreShipsOneDeck.innerHTML = '2 x';\r\n            } else if (playerState.scoreOneShip === 2) {\r\n               _store_store__WEBPACK_IMPORTED_MODULE_0__.scoreShipsOneDeck.innerHTML = '1 x';\r\n            } else if (playerState.scoreOneShip === 3) {\r\n               _store_store__WEBPACK_IMPORTED_MODULE_0__.scoreShipsOneDeck.innerHTML = '0 x';\r\n            }\r\n\r\n            disabledButtonStartGame();\r\n            drawNumberShipsUser();\r\n\r\n         } else if (shipType === 2 && orientation === 'h') {\r\n            playerCellsMap[y][x] = \"ship2\";\r\n            playerCellsMap[y][x2] = \"ship2\";\r\n\r\n            playerMapDivs[y][x].classList.add('activeTwoDeckShip');\r\n            playerMapDivs[y][x2].classList.add('activeTwoDeckShip');\r\n\r\n            playerMapDivs[y][x].classList.add('changeableOrientationTwoDeckShipOne');\r\n            playerMapDivs[y][x2].classList.add('changeableOrientationTwoDeckShipTwo');\r\n\r\n            playerState.scoreTwoShip = 0;\r\n\r\n            arrayPlayerCells.forEach((ship) => {\r\n               if (ship.classList.contains(\"activeTwoDeckShip\")) {\r\n                  playerState.scoreTwoShip++;\r\n               }\r\n            });\r\n\r\n            if (playerState.scoreTwoShip === 2) {\r\n               _store_store__WEBPACK_IMPORTED_MODULE_0__.scoreShipsTwoDeck.innerHTML = '1 x';\r\n            } else if (playerState.scoreTwoShip === 4) {\r\n               _store_store__WEBPACK_IMPORTED_MODULE_0__.scoreShipsTwoDeck.innerHTML = '0 x';\r\n            }\r\n\r\n            playerMapDivs[y][x].addEventListener('click', changeOrientationTwoDeckShipOne);\r\n\r\n            playerMapDivs[y][x2].addEventListener('click', changeOrientationTwoDeckShipTwo);\r\n\r\n            disabledButtonStartGame();\r\n            drawNumberShipsUser();\r\n\r\n         } else if (shipType === 3 && orientation === 'h') {\r\n            playerCellsMap[y][x] = \"ship3\";\r\n            playerCellsMap[y][x2] = \"ship3\";\r\n            playerCellsMap[y][x3] = \"ship3\";\r\n\r\n            playerMapDivs[y][x].classList.add('activeThreeDeckShip');\r\n            playerMapDivs[y][x2].classList.add('activeThreeDeckShip');\r\n            playerMapDivs[y][x3].classList.add('activeThreeDeckShip');\r\n\r\n            playerMapDivs[y][x].classList.add('changeableOrientationThreeDeckShipOne');\r\n            playerMapDivs[y][x3].classList.add('changeableOrientationThreeDeckShipThree');\r\n\r\n            arrayPlayerCells.forEach((ship) => {\r\n               if (ship.classList.contains(\"activeThreeDeckShip\")) {\r\n                  playerState.scoreThreeShip++;\r\n               }\r\n            });\r\n\r\n            if (playerState.scoreThreeShip === 3) {\r\n               _store_store__WEBPACK_IMPORTED_MODULE_0__.scoreShipsThreeDeck.innerHTML = '0 x';\r\n            }\r\n\r\n            playerMapDivs[y][x].addEventListener('click', changeOrientationThreeDeckShipOne);\r\n\r\n            playerMapDivs[y][x3].addEventListener('click', changeOrientationThreeDeckShipThree);\r\n\r\n            disabledButtonStartGame();\r\n            drawNumberShipsUser();\r\n\r\n         } else if (shipType === 2 && orientation === 'v') {\r\n            playerCellsMap[y][x] = \"ship2\";\r\n            playerCellsMap[y2][x] = \"ship2\";\r\n\r\n            playerMapDivs[y][x].classList.add('activeTwoDeckShip');\r\n            playerMapDivs[y2][x].classList.add('activeTwoDeckShip');\r\n\r\n            playerMapDivs[y][x].classList.add('vertical');\r\n            playerMapDivs[y2][x].classList.add('vertical');\r\n\r\n            if (playerMapDivs[y][x].classList.contains('changeableOrientationTwoDeckShipOne')) {\r\n               playerMapDivs[y][x].addEventListener('click', reverseChangeOrientationTwoDeckShipOne);\r\n            } else if (playerMapDivs[y][x].classList.contains('changeableOrientationTwoDeckShipTwo')) {\r\n               playerMapDivs[y][x].addEventListener('click', reverseChangeOrientationTwoDeckShipTwo);\r\n            }\r\n\r\n\r\n            playerState.scoreTwoShip = 0;\r\n\r\n            arrayPlayerCells.forEach((ship) => {\r\n               if (ship.classList.contains(\"activeTwoDeckShip\")) {\r\n                  playerState.scoreTwoShip++;\r\n               }\r\n            });\r\n\r\n            if (playerState.scoreTwoShip === 2) {\r\n               _store_store__WEBPACK_IMPORTED_MODULE_0__.scoreShipsTwoDeck.innerHTML = '1 x';\r\n            } else if (playerState.scoreTwoShip === 4) {\r\n               _store_store__WEBPACK_IMPORTED_MODULE_0__.scoreShipsTwoDeck.innerHTML = '0 x';\r\n            }\r\n\r\n            disabledButtonStartGame();\r\n            drawNumberShipsUser();\r\n\r\n         } else if (shipType === 3 && orientation === 'v') {\r\n            playerCellsMap[y][x] = \"ship3\";\r\n            playerCellsMap[y2][x] = \"ship3\";\r\n            playerCellsMap[y3][x] = \"ship3\";\r\n\r\n            playerMapDivs[y][x].classList.add('activeThreeDeckShip');\r\n            playerMapDivs[y2][x].classList.add('activeThreeDeckShip');\r\n            playerMapDivs[y3][x].classList.add('activeThreeDeckShip');\r\n\r\n            playerMapDivs[y][x].classList.add('vertical');\r\n            playerMapDivs[y2][x].classList.add('vertical');\r\n            playerMapDivs[y3][x].classList.add('vertical');\r\n\r\n            if (playerMapDivs[y][x].classList.contains('changeableOrientationThreeDeckShipOne')) {\r\n               playerMapDivs[y][x].addEventListener('click', reverseChangeOrientationThreeDeckShipOne);\r\n            } else if (playerMapDivs[y][x].classList.contains('changeableOrientationThreeDeckShipThree')) {\r\n               playerMapDivs[y][x].addEventListener('click', reverseChangeOrientationThreeDeckShipThree);\r\n            }\r\n\r\n            playerState.scoreThreeShip = 0;\r\n\r\n            arrayPlayerCells.forEach((ship) => {\r\n               if (ship.classList.contains(\"activeThreeDeckShip\")) {\r\n                  playerState.scoreThreeShip++;\r\n               }\r\n            });\r\n\r\n            if (playerState.scoreThreeShip === 3) {\r\n               _store_store__WEBPACK_IMPORTED_MODULE_0__.scoreShipsThreeDeck.innerHTML = '0 x';\r\n            }\r\n\r\n            disabledButtonStartGame();\r\n            drawNumberShipsUser();\r\n\r\n         }\r\n      }\r\n\r\n      /*\r\n         @params \r\n         rawX - координата по горизонтали <number>\r\n         y - координата по вертикали <number>\r\n         shipType - колличество палуб корабля <number>\r\n         orientation - горизонтальное либо вертикальное расположение корабля <string> (\"h\" или \"v\")\r\n      */\r\n\r\n      // placeShipToMap - функция проверки, на возможность выставления корабля на игровое поле.\r\n\r\n      function placeShipToMap(rawX, y, shipType, orientation = \"h\") {\r\n         const x = rawX - 1;\r\n\r\n         if (playerCellsMap[y][x] !== null) {\r\n            return;\r\n         }\r\n\r\n         // Горизонтальное положение\r\n\r\n         if (orientation === orientationEnum[0]) {\r\n            if (shipType === 1) {\r\n               if (playerCellsMap[y][x] !== null) {\r\n                  return;\r\n\r\n               } else if (y > 1 && y < 6 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  }\r\n\r\n               } else if (y === 1 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  }\r\n\r\n               } else if (y === 6 && x === 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  }\r\n\r\n               } else if (y === 6 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  }\r\n\r\n               } else if (y === 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 1);\r\n                  }\r\n               }\r\n            }\r\n\r\n\r\n            if (shipType === 2) {\r\n               if (playerCellsMap[y][x] !== null && playerCellsMap[y][x + 1] !== null) {\r\n                  return;\r\n               } else if (y > 1 && y < 6 && x > 0 && x < 4) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null &&\r\n                     playerCellsMap[y][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x > 0 && x < 4) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 4) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null &&\r\n                     playerCellsMap[y][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 4) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 6 && x === 4) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 6 && x > 0 && x < 4) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null &&\r\n                     playerCellsMap[y][x + 2] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null &&\r\n                     playerCellsMap[y][x + 2] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n               }\r\n            }\r\n\r\n            if (shipType === 3) {\r\n               if (playerCellsMap[y][x] !== null && playerCellsMap[y][x + 1] !== null && playerCellsMap[y][x + 2] !== null) {\r\n                  return;\r\n               } else if (y > 1 && y < 6 && x > 0 && x < 3) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null &&\r\n                     playerCellsMap[y - 1][x + 3] === null &&\r\n                     playerCellsMap[y][x + 3] === null &&\r\n                     playerCellsMap[y + 1][x + 3] === null &&\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 3] === null &&\r\n                     playerCellsMap[y + 1][x + 3] === null &&\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x > 0 && x < 3) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 3] === null &&\r\n                     playerCellsMap[y + 1][x + 3] === null &&\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y > 1 && y < 6 && x === 3) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 3) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 6 && x === 3) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 6 && x > 0 && x < 3) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null &&\r\n                     playerCellsMap[y - 1][x + 3] === null &&\r\n                     playerCellsMap[y][x + 3] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null &&\r\n                     playerCellsMap[y - 1][x + 3] === null &&\r\n                     playerCellsMap[y][x + 3] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y > 0 && y < 6 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 1][x] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 2] === null &&\r\n                     playerCellsMap[y + 1][x + 3] === null &&\r\n                     playerCellsMap[y][x + 3] === null &&\r\n                     playerCellsMap[y - 1][x + 3] === null &&\r\n                     playerCellsMap[y - 1][x + 2] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n               }\r\n            }\r\n         }\r\n\r\n         // Вертикальное положение\r\n\r\n         if (orientation === orientationEnum[1]) {\r\n            if (shipType === 2) {\r\n               if (playerCellsMap[y][x] !== null && playerCellsMap[y + 1][x] !== null) {\r\n                  return;\r\n\r\n               } else if (y > 1 && y < 5 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x] === null &&\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x] === null &&\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 2][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y > 1 && y < 5 && x === 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 2][x] === null &&\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 5 && x === 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 5 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y === 5 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n\r\n               } else if (y > 1 && y < 5 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 2, orientation);\r\n                  }\r\n               }\r\n            }\r\n\r\n            if (shipType === 3) {\r\n               if (playerCellsMap[y][x] !== null && playerCellsMap[y + 1][x] !== null && playerCellsMap[y + 2][x] !== null) {\r\n                  return;\r\n               } else if (y > 1 && y < 4 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null &&\r\n                     playerCellsMap[y + 3][x + 1] === null &&\r\n                     playerCellsMap[y + 3][x] === null &&\r\n                     playerCellsMap[y + 3][x - 1] === null &&\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null &&\r\n                     playerCellsMap[y + 3][x + 1] === null &&\r\n                     playerCellsMap[y + 3][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null &&\r\n                     playerCellsMap[y + 3][x + 1] === null &&\r\n                     playerCellsMap[y + 3][x] === null &&\r\n                     playerCellsMap[y + 3][x - 1] === null &&\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 1 && x === 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 3][x] === null &&\r\n                     playerCellsMap[y + 3][x - 1] === null &&\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y > 1 && y < 4 && x === 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 3][x] === null &&\r\n                     playerCellsMap[y + 3][x - 1] === null &&\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 4 && x === 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 4 && x > 0 && x < 5) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y + 2][x - 1] === null &&\r\n                     playerCellsMap[y + 1][x - 1] === null &&\r\n                     playerCellsMap[y][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x - 1] === null &&\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y === 4 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               } else if (y > 1 && y < 4 && x === 0) {\r\n                  if\r\n                     (\r\n                     playerCellsMap[y - 1][x] === null &&\r\n                     playerCellsMap[y - 1][x + 1] === null &&\r\n                     playerCellsMap[y][x + 1] === null &&\r\n                     playerCellsMap[y + 1][x + 1] === null &&\r\n                     playerCellsMap[y + 2][x + 1] === null &&\r\n                     playerCellsMap[y + 3][x + 1] === null &&\r\n                     playerCellsMap[y + 3][x] === null\r\n                  ) {\r\n                     drawShip(x, y, 3, orientation);\r\n                  }\r\n\r\n               }\r\n            }\r\n\r\n         }\r\n\r\n      }\r\n      disabledButtonStartGame();\r\n\r\n      _store_store__WEBPACK_IMPORTED_MODULE_0__.buttonStartGame.addEventListener('click', () => {\r\n         arrayPlayerCells.forEach(ship => {\r\n            if (ship.classList.contains('changeableOrientationTwoDeckShipOne')) {\r\n               ship.removeEventListener('click', changeOrientationTwoDeckShipOne);\r\n               ship.removeEventListener('click', reverseChangeOrientationTwoDeckShipOne);\r\n            } else if (ship.classList.contains('changeableOrientationTwoDeckShipTwo')) {\r\n               ship.removeEventListener('click', changeOrientationTwoDeckShipTwo);\r\n               ship.removeEventListener('click', reverseChangeOrientationTwoDeckShipTwo);\r\n            } else if (ship.classList.contains('changeableOrientationThreeDeckShipOne')) {\r\n               ship.removeEventListener('click', changeOrientationThreeDeckShipOne);\r\n               ship.removeEventListener('click', reverseChangeOrientationThreeDeckShipOne);\r\n            } else if (ship.classList.contains('changeableOrientationThreeDeckShipThree')) {\r\n               ship.removeEventListener('click', changeOrientationThreeDeckShipThree);\r\n               ship.removeEventListener('click', reverseChangeOrientationThreeDeckShipThree);\r\n            }\r\n         })\r\n      })\r\n   }\r\n};\n\n//# sourceURL=webpack://sea_battle/./src/js/placementShipsPlayer/PlacementShipsPlayer.js?");

/***/ }),

/***/ "./src/js/store/store.js":
/*!*******************************!*\
  !*** ./src/js/store/store.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"playerGameCells\": () => (/* binding */ playerGameCells),\n/* harmony export */   \"computerGameCells\": () => (/* binding */ computerGameCells),\n/* harmony export */   \"oneDeckShip\": () => (/* binding */ oneDeckShip),\n/* harmony export */   \"twoDeckShip\": () => (/* binding */ twoDeckShip),\n/* harmony export */   \"threeDeckShip\": () => (/* binding */ threeDeckShip),\n/* harmony export */   \"scoreShipsOneDeck\": () => (/* binding */ scoreShipsOneDeck),\n/* harmony export */   \"scoreShipsTwoDeck\": () => (/* binding */ scoreShipsTwoDeck),\n/* harmony export */   \"scoreShipsThreeDeck\": () => (/* binding */ scoreShipsThreeDeck),\n/* harmony export */   \"buttonStartGame\": () => (/* binding */ buttonStartGame),\n/* harmony export */   \"countSingleDeckShipsPlayer\": () => (/* binding */ countSingleDeckShipsPlayer),\n/* harmony export */   \"countDoubleDeckShipsPlayer\": () => (/* binding */ countDoubleDeckShipsPlayer),\n/* harmony export */   \"countThreeDeckShipsPlayer\": () => (/* binding */ countThreeDeckShipsPlayer),\n/* harmony export */   \"countSingleDeckShipsComputer\": () => (/* binding */ countSingleDeckShipsComputer),\n/* harmony export */   \"countDoubleDeckShipsComputer\": () => (/* binding */ countDoubleDeckShipsComputer),\n/* harmony export */   \"countThreeDeckShipsComputer\": () => (/* binding */ countThreeDeckShipsComputer),\n/* harmony export */   \"playerField\": () => (/* binding */ playerField),\n/* harmony export */   \"ComputerField\": () => (/* binding */ ComputerField),\n/* harmony export */   \"winnerWindow\": () => (/* binding */ winnerWindow),\n/* harmony export */   \"loserWindow\": () => (/* binding */ loserWindow),\n/* harmony export */   \"closeWinnerWindow\": () => (/* binding */ closeWinnerWindow),\n/* harmony export */   \"closeLoserWindow\": () => (/* binding */ closeLoserWindow),\n/* harmony export */   \"playerMove\": () => (/* binding */ playerMove),\n/* harmony export */   \"computerMove\": () => (/* binding */ computerMove),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst playerGameCells = document.querySelectorAll('.player_cell'),\r\n   computerGameCells = document.querySelectorAll('.computer_cell'),\r\n   oneDeckShip = document.getElementById('1'),\r\n   twoDeckShip = document.getElementById('2'),\r\n   threeDeckShip = document.getElementById('3'),\r\n   scoreShipsOneDeck = document.querySelector('.one_deck'),\r\n   scoreShipsTwoDeck = document.querySelector('.two_deck'),\r\n   scoreShipsThreeDeck = document.querySelector('.three_deck'),\r\n   buttonStartGame = document.querySelector('.start_game'),\r\n   countSingleDeckShipsPlayer = document.querySelector('.user_ship_1'),\r\n   countDoubleDeckShipsPlayer = document.querySelector('.user_ship_2'),\r\n   countThreeDeckShipsPlayer = document.querySelector('.user_ship_3'),\r\n   countSingleDeckShipsComputer = document.querySelector('.computer_ship_1'),\r\n   countDoubleDeckShipsComputer = document.querySelector('.computer_ship_2'),\r\n   countThreeDeckShipsComputer = document.querySelector('.computer_ship_3'),\r\n   playerField = document.querySelector('.user'),\r\n   ComputerField = document.querySelector('.computer'),\r\n   winnerWindow = document.querySelector('.winner'),\r\n   loserWindow = document.querySelector('.loser'),\r\n   closeWinnerWindow = document.querySelector('.close_winner'),\r\n   closeLoserWindow = document.querySelector('.close_loser'),\r\n   playerMove = document.querySelector('.move_user'),\r\n   computerMove = document.querySelector('.move_computer');\r\n\r\nconst store = {\r\n   _gameState: {\r\n      userName: '',\r\n      arrayPlayerCells: [...playerGameCells],\r\n      arrayComputerCells: [...computerGameCells],\r\n      orientationEnum: ['h', 'v'],\r\n\r\n      literals: {\r\n         NAME_QUERY: 'Как вас зовут?',\r\n         DEFAULT_USER_NAME: 'Игрок без имени.',\r\n         MOVE_USER: 'Ваш ход!',\r\n         MOVE_COMPUTER: 'Ход компьютера!',\r\n      },\r\n\r\n      mechanicsFight: {\r\n         randomPlayerCell: '',\r\n         limitedArrayPlayerCells: [],\r\n         limitedRandomCell: '',\r\n\r\n         playerShips: {\r\n            oneDeck: [],\r\n            twoDeck: [],\r\n            threeDeck: []\r\n         },\r\n\r\n         computerShips: {\r\n            oneDeck: [],\r\n            twoDeck: [],\r\n            threeDeck: []\r\n         },\r\n      },\r\n\r\n      playerState: {\r\n         typeShip: '',\r\n         scoreOneShip: 0,\r\n         scoreTwoShip: 0,\r\n         scoreThreeShip: 0\r\n      },\r\n\r\n      computerState: {\r\n         randomShip: '',\r\n         randomOrientation: '',\r\n         counterFailedAttempt: 0\r\n      },\r\n\r\n      shipTypeComputer: {\r\n         shipTypeOne: [],\r\n         shipTypeTwo: [],\r\n         shipTypeThree: []\r\n      },\r\n\r\n      emptyCellsMap: {\r\n         1: [null, null, null, null, null, null],\r\n         2: [null, null, null, null, null, null],\r\n         3: [null, null, null, null, null, null],\r\n         4: [null, null, null, null, null, null],\r\n         5: [null, null, null, null, null, null],\r\n         6: [null, null, null, null, null, null]\r\n      }\r\n\r\n   },\r\n\r\n   getGameState() {\r\n      return this._gameState;\r\n   },\r\n\r\n   getCopyEmptyCellsMap() {\r\n      const { emptyCellsMap } = this.getGameState();\r\n      return {\r\n         ...emptyCellsMap,\r\n         1: [...emptyCellsMap['1']],\r\n         2: [...emptyCellsMap['2']],\r\n         3: [...emptyCellsMap['3']],\r\n         4: [...emptyCellsMap['4']],\r\n         5: [...emptyCellsMap['5']],\r\n         6: [...emptyCellsMap['6']]\r\n      }\r\n   }\r\n\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (store);\n\n//# sourceURL=webpack://sea_battle/./src/js/store/store.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	
/******/ })()
;